--
-- Test foreign-data wrapper and server management.
--
-- Clean up in case a prior regression run failed
-- Suppress NOTICE messages when roles don't exist
SET client_min_messages TO 'warning';
SET
DROP ROLE IF EXISTS regress_foreign_data_user, regress_test_role, regress_test_role2, regress_test_role_super, regress_test_indirect, regress_unprivileged_role;
DROP ROLE
RESET client_min_messages;
RESET
CREATE ROLE regress_foreign_data_user LOGIN SUPERUSER;
CREATE ROLE
SET SESSION AUTHORIZATION 'regress_foreign_data_user';
SET
CREATE ROLE regress_test_role;
CREATE ROLE
CREATE ROLE regress_test_role2;
CREATE ROLE
CREATE ROLE regress_test_role_super SUPERUSER;
CREATE ROLE
CREATE ROLE regress_test_indirect;
CREATE ROLE
CREATE ROLE regress_unprivileged_role;
CREATE ROLE
CREATE FOREIGN DATA WRAPPER dummy;
CREATE FOREIGN DATA WRAPPER
COMMENT ON FOREIGN DATA WRAPPER dummy IS 'useless';
COMMENT
CREATE FOREIGN DATA WRAPPER postgresql VALIDATOR postgresql_fdw_validator;
CREATE FOREIGN DATA WRAPPER
-- At this point we should have 2 built-in wrappers and no servers.
SELECT fdwname, fdwhandler::regproc, fdwvalidator::regproc, fdwoptions FROM pg_foreign_data_wrapper ORDER BY 1, 2, 3;
  fdwname   | fdwhandler |       fdwvalidator       | fdwoptions 
------------+------------+--------------------------+------------
 addr_fdw   | -          | -                        | 
 dummy      | -          | -                        | 
 postgresql | -          | postgresql_fdw_validator | 
(3 rows)

SELECT srvname, srvoptions FROM pg_foreign_server;
  srvname   | srvoptions 
------------+------------
 addr_fserv | 
 integer    | 
(2 rows)

--Its value changes frequently and is temporarily cancelled
--SELECT * FROM pg_user_mapping;
-- CREATE FOREIGN DATA WRAPPER
CREATE FOREIGN DATA WRAPPER foo VALIDATOR bar;            -- ERROR
psql:sql/foreign_data.sql:34: ERROR:  function bar(text[], oid) does not exist
CREATE FOREIGN DATA WRAPPER foo;
CREATE FOREIGN DATA WRAPPER
\dew
                        List of foreign-data wrappers
    Name    |           Owner           | Handler |        Validator         
------------+---------------------------+---------+--------------------------
 addr_fdw   | abc                       | -       | -
 dummy      | regress_foreign_data_user | -       | -
 foo        | regress_foreign_data_user | -       | -
 postgresql | regress_foreign_data_user | -       | postgresql_fdw_validator
(4 rows)

CREATE FOREIGN DATA WRAPPER foo; -- duplicate
psql:sql/foreign_data.sql:38: ERROR:  foreign-data wrapper "foo" already exists
DROP FOREIGN DATA WRAPPER foo;
DROP FOREIGN DATA WRAPPER
CREATE FOREIGN DATA WRAPPER foo OPTIONS (testing '1');
CREATE FOREIGN DATA WRAPPER
\dew+
                                                 List of foreign-data wrappers
    Name    |           Owner           | Handler |        Validator         | Access privileges |  FDW options  | Description 
------------+---------------------------+---------+--------------------------+-------------------+---------------+-------------
 addr_fdw   | abc                       | -       | -                        |                   |               | 
 dummy      | regress_foreign_data_user | -       | -                        |                   |               | useless
 foo        | regress_foreign_data_user | -       | -                        |                   | (testing '1') | 
 postgresql | regress_foreign_data_user | -       | postgresql_fdw_validator |                   |               | 
(4 rows)

DROP FOREIGN DATA WRAPPER foo;
DROP FOREIGN DATA WRAPPER
CREATE FOREIGN DATA WRAPPER foo OPTIONS (testing '1', testing '2');   -- ERROR
psql:sql/foreign_data.sql:44: ERROR:  option "testing" provided more than once
CREATE FOREIGN DATA WRAPPER foo OPTIONS (testing '1', another '2');
CREATE FOREIGN DATA WRAPPER
\dew+
                                                       List of foreign-data wrappers
    Name    |           Owner           | Handler |        Validator         | Access privileges |        FDW options         | Description 
------------+---------------------------+---------+--------------------------+-------------------+----------------------------+-------------
 addr_fdw   | abc                       | -       | -                        |                   |                            | 
 dummy      | regress_foreign_data_user | -       | -                        |                   |                            | useless
 foo        | regress_foreign_data_user | -       | -                        |                   | (testing '1', another '2') | 
 postgresql | regress_foreign_data_user | -       | postgresql_fdw_validator |                   |                            | 
(4 rows)

DROP FOREIGN DATA WRAPPER foo;
DROP FOREIGN DATA WRAPPER
SET ROLE regress_test_role;
SET
CREATE FOREIGN DATA WRAPPER foo; -- ERROR
psql:sql/foreign_data.sql:50: ERROR:  permission denied to create foreign-data wrapper "foo"
HINT:  Must be superuser to create a foreign-data wrapper.
RESET ROLE;
RESET
CREATE FOREIGN DATA WRAPPER foo VALIDATOR postgresql_fdw_validator;
CREATE FOREIGN DATA WRAPPER
\dew+
                                                List of foreign-data wrappers
    Name    |           Owner           | Handler |        Validator         | Access privileges | FDW options | Description 
------------+---------------------------+---------+--------------------------+-------------------+-------------+-------------
 addr_fdw   | abc                       | -       | -                        |                   |             | 
 dummy      | regress_foreign_data_user | -       | -                        |                   |             | useless
 foo        | regress_foreign_data_user | -       | postgresql_fdw_validator |                   |             | 
 postgresql | regress_foreign_data_user | -       | postgresql_fdw_validator |                   |             | 
(4 rows)

-- HANDLER related checks
CREATE FUNCTION invalid_fdw_handler() RETURNS int LANGUAGE SQL AS 'SELECT 1;';
CREATE FUNCTION
CREATE FOREIGN DATA WRAPPER test_fdw HANDLER invalid_fdw_handler;  -- ERROR
psql:sql/foreign_data.sql:57: ERROR:  function invalid_fdw_handler must return type fdw_handler
CREATE FOREIGN DATA WRAPPER test_fdw HANDLER test_fdw_handler HANDLER invalid_fdw_handler;  -- ERROR
psql:sql/foreign_data.sql:58: ERROR:  conflicting or redundant options
CREATE FOREIGN DATA WRAPPER test_fdw HANDLER test_fdw_handler;
CREATE FOREIGN DATA WRAPPER
DROP FOREIGN DATA WRAPPER test_fdw;
DROP FOREIGN DATA WRAPPER
-- ALTER FOREIGN DATA WRAPPER
ALTER FOREIGN DATA WRAPPER foo;                             -- ERROR
psql:sql/foreign_data.sql:63: ERROR:  syntax error at or near ";"
LINE 1: ALTER FOREIGN DATA WRAPPER foo;
                                      ^
ALTER FOREIGN DATA WRAPPER foo VALIDATOR bar;               -- ERROR
psql:sql/foreign_data.sql:64: ERROR:  function bar(text[], oid) does not exist
ALTER FOREIGN DATA WRAPPER foo NO VALIDATOR;
ALTER FOREIGN DATA WRAPPER
\dew+
                                                List of foreign-data wrappers
    Name    |           Owner           | Handler |        Validator         | Access privileges | FDW options | Description 
------------+---------------------------+---------+--------------------------+-------------------+-------------+-------------
 addr_fdw   | abc                       | -       | -                        |                   |             | 
 dummy      | regress_foreign_data_user | -       | -                        |                   |             | useless
 foo        | regress_foreign_data_user | -       | -                        |                   |             | 
 postgresql | regress_foreign_data_user | -       | postgresql_fdw_validator |                   |             | 
(4 rows)

ALTER FOREIGN DATA WRAPPER foo OPTIONS (a '1', b '2');
ALTER FOREIGN DATA WRAPPER
ALTER FOREIGN DATA WRAPPER foo OPTIONS (SET c '4');         -- ERROR
psql:sql/foreign_data.sql:69: ERROR:  option "c" not found
ALTER FOREIGN DATA WRAPPER foo OPTIONS (DROP c);            -- ERROR
psql:sql/foreign_data.sql:70: ERROR:  option "c" not found
ALTER FOREIGN DATA WRAPPER foo OPTIONS (ADD x '1', DROP x);
ALTER FOREIGN DATA WRAPPER
\dew+
                                                 List of foreign-data wrappers
    Name    |           Owner           | Handler |        Validator         | Access privileges |  FDW options   | Description 
------------+---------------------------+---------+--------------------------+-------------------+----------------+-------------
 addr_fdw   | abc                       | -       | -                        |                   |                | 
 dummy      | regress_foreign_data_user | -       | -                        |                   |                | useless
 foo        | regress_foreign_data_user | -       | -                        |                   | (a '1', b '2') | 
 postgresql | regress_foreign_data_user | -       | postgresql_fdw_validator |                   |                | 
(4 rows)

ALTER FOREIGN DATA WRAPPER foo OPTIONS (DROP a, SET b '3', ADD c '4');
ALTER FOREIGN DATA WRAPPER
\dew+
                                                 List of foreign-data wrappers
    Name    |           Owner           | Handler |        Validator         | Access privileges |  FDW options   | Description 
------------+---------------------------+---------+--------------------------+-------------------+----------------+-------------
 addr_fdw   | abc                       | -       | -                        |                   |                | 
 dummy      | regress_foreign_data_user | -       | -                        |                   |                | useless
 foo        | regress_foreign_data_user | -       | -                        |                   | (b '3', c '4') | 
 postgresql | regress_foreign_data_user | -       | postgresql_fdw_validator |                   |                | 
(4 rows)

ALTER FOREIGN DATA WRAPPER foo OPTIONS (a '2');
ALTER FOREIGN DATA WRAPPER
ALTER FOREIGN DATA WRAPPER foo OPTIONS (b '4');             -- ERROR
psql:sql/foreign_data.sql:78: ERROR:  option "b" provided more than once
\dew+
                                                     List of foreign-data wrappers
    Name    |           Owner           | Handler |        Validator         | Access privileges |      FDW options      | Description 
------------+---------------------------+---------+--------------------------+-------------------+-----------------------+-------------
 addr_fdw   | abc                       | -       | -                        |                   |                       | 
 dummy      | regress_foreign_data_user | -       | -                        |                   |                       | useless
 foo        | regress_foreign_data_user | -       | -                        |                   | (b '3', c '4', a '2') | 
 postgresql | regress_foreign_data_user | -       | postgresql_fdw_validator |                   |                       | 
(4 rows)

SET ROLE regress_test_role;
SET
ALTER FOREIGN DATA WRAPPER foo OPTIONS (ADD d '5');         -- ERROR
psql:sql/foreign_data.sql:82: ERROR:  permission denied to alter foreign-data wrapper "foo"
HINT:  Must be superuser to alter a foreign-data wrapper.
SET ROLE regress_test_role_super;
SET
ALTER FOREIGN DATA WRAPPER foo OPTIONS (ADD d '5');
ALTER FOREIGN DATA WRAPPER
\dew+
                                                        List of foreign-data wrappers
    Name    |           Owner           | Handler |        Validator         | Access privileges |         FDW options          | Description 
------------+---------------------------+---------+--------------------------+-------------------+------------------------------+-------------
 addr_fdw   | abc                       | -       | -                        |                   |                              | 
 dummy      | regress_foreign_data_user | -       | -                        |                   |                              | useless
 foo        | regress_foreign_data_user | -       | -                        |                   | (b '3', c '4', a '2', d '5') | 
 postgresql | regress_foreign_data_user | -       | postgresql_fdw_validator |                   |                              | 
(4 rows)

ALTER FOREIGN DATA WRAPPER foo OWNER TO regress_test_role;  -- ERROR
psql:sql/foreign_data.sql:87: ERROR:  permission denied to change owner of foreign-data wrapper "foo"
HINT:  The owner of a foreign-data wrapper must be a superuser.
ALTER FOREIGN DATA WRAPPER foo OWNER TO regress_test_role_super;
ALTER FOREIGN DATA WRAPPER
ALTER ROLE regress_test_role_super NOSUPERUSER;
ALTER ROLE
SET ROLE regress_test_role_super;
SET
ALTER FOREIGN DATA WRAPPER foo OPTIONS (ADD e '6');         -- ERROR
psql:sql/foreign_data.sql:91: ERROR:  permission denied to alter foreign-data wrapper "foo"
HINT:  Must be superuser to alter a foreign-data wrapper.
RESET ROLE;
RESET
\dew+
                                                        List of foreign-data wrappers
    Name    |           Owner           | Handler |        Validator         | Access privileges |         FDW options          | Description 
------------+---------------------------+---------+--------------------------+-------------------+------------------------------+-------------
 addr_fdw   | abc                       | -       | -                        |                   |                              | 
 dummy      | regress_foreign_data_user | -       | -                        |                   |                              | useless
 foo        | regress_test_role_super   | -       | -                        |                   | (b '3', c '4', a '2', d '5') | 
 postgresql | regress_foreign_data_user | -       | postgresql_fdw_validator |                   |                              | 
(4 rows)

ALTER FOREIGN DATA WRAPPER foo RENAME TO foo1;
ALTER FOREIGN DATA WRAPPER
\dew+
                                                        List of foreign-data wrappers
    Name    |           Owner           | Handler |        Validator         | Access privileges |         FDW options          | Description 
------------+---------------------------+---------+--------------------------+-------------------+------------------------------+-------------
 addr_fdw   | abc                       | -       | -                        |                   |                              | 
 dummy      | regress_foreign_data_user | -       | -                        |                   |                              | useless
 foo1       | regress_test_role_super   | -       | -                        |                   | (b '3', c '4', a '2', d '5') | 
 postgresql | regress_foreign_data_user | -       | postgresql_fdw_validator |                   |                              | 
(4 rows)

ALTER FOREIGN DATA WRAPPER foo1 RENAME TO foo;
ALTER FOREIGN DATA WRAPPER
-- HANDLER related checks
ALTER FOREIGN DATA WRAPPER foo HANDLER invalid_fdw_handler;  -- ERROR
psql:sql/foreign_data.sql:100: ERROR:  function invalid_fdw_handler must return type fdw_handler
ALTER FOREIGN DATA WRAPPER foo HANDLER test_fdw_handler HANDLER anything;  -- ERROR
psql:sql/foreign_data.sql:101: ERROR:  conflicting or redundant options
ALTER FOREIGN DATA WRAPPER foo HANDLER test_fdw_handler;
psql:sql/foreign_data.sql:102: WARNING:  changing the foreign-data wrapper handler can change behavior of existing foreign tables
ALTER FOREIGN DATA WRAPPER
DROP FUNCTION invalid_fdw_handler();
DROP FUNCTION
-- DROP FOREIGN DATA WRAPPER
DROP FOREIGN DATA WRAPPER nonexistent;                      -- ERROR
psql:sql/foreign_data.sql:106: ERROR:  foreign-data wrapper "nonexistent" does not exist
DROP FOREIGN DATA WRAPPER IF EXISTS nonexistent;
psql:sql/foreign_data.sql:107: NOTICE:  foreign-data wrapper "nonexistent" does not exist, skipping
DROP FOREIGN DATA WRAPPER
\dew+
                                                             List of foreign-data wrappers
    Name    |           Owner           |     Handler      |        Validator         | Access privileges |         FDW options          | Description 
------------+---------------------------+------------------+--------------------------+-------------------+------------------------------+-------------
 addr_fdw   | abc                       | -                | -                        |                   |                              | 
 dummy      | regress_foreign_data_user | -                | -                        |                   |                              | useless
 foo        | regress_test_role_super   | test_fdw_handler | -                        |                   | (b '3', c '4', a '2', d '5') | 
 postgresql | regress_foreign_data_user | -                | postgresql_fdw_validator |                   |                              | 
(4 rows)

DROP ROLE regress_test_role_super;                          -- ERROR
psql:sql/foreign_data.sql:110: ERROR:  role "regress_test_role_super" cannot be dropped because some objects depend on it
DETAIL:  owner of foreign-data wrapper foo
SET ROLE regress_test_role_super;
SET
DROP FOREIGN DATA WRAPPER foo;
DROP FOREIGN DATA WRAPPER
RESET ROLE;
RESET
DROP ROLE regress_test_role_super;
DROP ROLE
\dew+
                                                List of foreign-data wrappers
    Name    |           Owner           | Handler |        Validator         | Access privileges | FDW options | Description 
------------+---------------------------+---------+--------------------------+-------------------+-------------+-------------
 addr_fdw   | abc                       | -       | -                        |                   |             | 
 dummy      | regress_foreign_data_user | -       | -                        |                   |             | useless
 postgresql | regress_foreign_data_user | -       | postgresql_fdw_validator |                   |             | 
(3 rows)

CREATE FOREIGN DATA WRAPPER foo;
CREATE FOREIGN DATA WRAPPER
CREATE SERVER s1 FOREIGN DATA WRAPPER foo;
CREATE SERVER
COMMENT ON SERVER s1 IS 'foreign server';
COMMENT
CREATE USER MAPPING FOR current_user SERVER s1;
CREATE USER MAPPING
CREATE USER MAPPING FOR current_user SERVER s1;				-- ERROR
psql:sql/foreign_data.sql:121: ERROR:  user mapping for "regress_foreign_data_user" already exists for server s1
CREATE USER MAPPING IF NOT EXISTS FOR current_user SERVER s1; -- NOTICE
psql:sql/foreign_data.sql:122: NOTICE:  user mapping for "regress_foreign_data_user" already exists for server s1, skipping
CREATE USER MAPPING
\dew+
                                                List of foreign-data wrappers
    Name    |           Owner           | Handler |        Validator         | Access privileges | FDW options | Description 
------------+---------------------------+---------+--------------------------+-------------------+-------------+-------------
 addr_fdw   | abc                       | -       | -                        |                   |             | 
 dummy      | regress_foreign_data_user | -       | -                        |                   |             | useless
 foo        | regress_foreign_data_user | -       | -                        |                   |             | 
 postgresql | regress_foreign_data_user | -       | postgresql_fdw_validator |                   |             | 
(4 rows)

\des+
                                                      List of foreign servers
    Name    |           Owner           | Foreign-data wrapper | Access privileges | Type | Version | FDW options |  Description   
------------+---------------------------+----------------------+-------------------+------+---------+-------------+----------------
 addr_fserv | abc                       | addr_fdw             |                   |      |         |             | 
 integer    | abc                       | addr_fdw             |                   |      |         |             | 
 s1         | regress_foreign_data_user | foo                  |                   |      |         |             | foreign server
(3 rows)

\deu+
               List of user mappings
 Server  |         User name         | FDW options 
---------+---------------------------+-------------
 integer | regress_addr_user         | 
 s1      | regress_foreign_data_user | 
(2 rows)

DROP FOREIGN DATA WRAPPER foo;                              -- ERROR
psql:sql/foreign_data.sql:126: ERROR:  cannot drop foreign-data wrapper foo because other objects depend on it
DETAIL:  server s1 depends on foreign-data wrapper foo
user mapping for regress_foreign_data_user on server s1 depends on server s1
HINT:  Use DROP ... CASCADE to drop the dependent objects too.
SET ROLE regress_test_role;
SET
DROP FOREIGN DATA WRAPPER foo CASCADE;                      -- ERROR
psql:sql/foreign_data.sql:128: ERROR:  must be owner of foreign-data wrapper foo
RESET ROLE;
RESET
DROP FOREIGN DATA WRAPPER foo CASCADE;
psql:sql/foreign_data.sql:130: NOTICE:  drop cascades to 2 other objects
DETAIL:  drop cascades to server s1
drop cascades to user mapping for regress_foreign_data_user on server s1
DROP FOREIGN DATA WRAPPER
\dew+
                                                List of foreign-data wrappers
    Name    |           Owner           | Handler |        Validator         | Access privileges | FDW options | Description 
------------+---------------------------+---------+--------------------------+-------------------+-------------+-------------
 addr_fdw   | abc                       | -       | -                        |                   |             | 
 dummy      | regress_foreign_data_user | -       | -                        |                   |             | useless
 postgresql | regress_foreign_data_user | -       | postgresql_fdw_validator |                   |             | 
(3 rows)

\des+
                                          List of foreign servers
    Name    | Owner | Foreign-data wrapper | Access privileges | Type | Version | FDW options | Description 
------------+-------+----------------------+-------------------+------+---------+-------------+-------------
 addr_fserv | abc   | addr_fdw             |                   |      |         |             | 
 integer    | abc   | addr_fdw             |                   |      |         |             | 
(2 rows)

\deu+
           List of user mappings
 Server  |     User name     | FDW options 
---------+-------------------+-------------
 integer | regress_addr_user | 
(1 row)

-- exercise CREATE SERVER
CREATE SERVER s1 FOREIGN DATA WRAPPER foo;                  -- ERROR
psql:sql/foreign_data.sql:136: ERROR:  foreign-data wrapper "foo" does not exist
CREATE FOREIGN DATA WRAPPER foo OPTIONS ("test wrapper" 'true');
CREATE FOREIGN DATA WRAPPER
CREATE SERVER s1 FOREIGN DATA WRAPPER foo;
CREATE SERVER
CREATE SERVER s1 FOREIGN DATA WRAPPER foo;                  -- ERROR
psql:sql/foreign_data.sql:139: ERROR:  server "s1" already exists
CREATE SERVER IF NOT EXISTS s1 FOREIGN DATA WRAPPER foo;	-- No ERROR, just NOTICE
psql:sql/foreign_data.sql:140: NOTICE:  server "s1" already exists, skipping
CREATE SERVER
CREATE SERVER s2 FOREIGN DATA WRAPPER foo OPTIONS (host 'a', dbname 'b');
CREATE SERVER
CREATE SERVER s3 TYPE 'oracle' FOREIGN DATA WRAPPER foo;
CREATE SERVER
CREATE SERVER s4 TYPE 'oracle' FOREIGN DATA WRAPPER foo OPTIONS (host 'a', dbname 'b');
CREATE SERVER
CREATE SERVER s5 VERSION '15.0' FOREIGN DATA WRAPPER foo;
CREATE SERVER
CREATE SERVER s6 VERSION '16.0' FOREIGN DATA WRAPPER foo OPTIONS (host 'a', dbname 'b');
CREATE SERVER
CREATE SERVER s7 TYPE 'oracle' VERSION '17.0' FOREIGN DATA WRAPPER foo OPTIONS (host 'a', dbname 'b');
CREATE SERVER
CREATE SERVER s8 FOREIGN DATA WRAPPER postgresql OPTIONS (foo '1'); -- ERROR
psql:sql/foreign_data.sql:147: ERROR:  invalid option "foo"
HINT:  Valid options in this context are: authtype, service, connect_timeout, dbname, host, hostaddr, port, tty, options, requiressl, sslmode, gsslib
CREATE SERVER s8 FOREIGN DATA WRAPPER postgresql OPTIONS (host 'localhost', dbname 's8db');
CREATE SERVER
\des+
                                                                List of foreign servers
    Name    |           Owner           | Foreign-data wrapper | Access privileges |  Type  | Version |            FDW options            | Description 
------------+---------------------------+----------------------+-------------------+--------+---------+-----------------------------------+-------------
 addr_fserv | abc                       | addr_fdw             |                   |        |         |                                   | 
 integer    | abc                       | addr_fdw             |                   |        |         |                                   | 
 s1         | regress_foreign_data_user | foo                  |                   |        |         |                                   | 
 s2         | regress_foreign_data_user | foo                  |                   |        |         | (host 'a', dbname 'b')            | 
 s3         | regress_foreign_data_user | foo                  |                   | oracle |         |                                   | 
 s4         | regress_foreign_data_user | foo                  |                   | oracle |         | (host 'a', dbname 'b')            | 
 s5         | regress_foreign_data_user | foo                  |                   |        | 15.0    |                                   | 
 s6         | regress_foreign_data_user | foo                  |                   |        | 16.0    | (host 'a', dbname 'b')            | 
 s7         | regress_foreign_data_user | foo                  |                   | oracle | 17.0    | (host 'a', dbname 'b')            | 
 s8         | regress_foreign_data_user | postgresql           |                   |        |         | (host 'localhost', dbname 's8db') | 
(10 rows)

SET ROLE regress_test_role;
SET
CREATE SERVER t1 FOREIGN DATA WRAPPER foo;                 -- ERROR: no usage on FDW
psql:sql/foreign_data.sql:151: ERROR:  permission denied for foreign-data wrapper foo
RESET ROLE;
RESET
GRANT USAGE ON FOREIGN DATA WRAPPER foo TO regress_test_role;
GRANT
SET ROLE regress_test_role;
SET
CREATE SERVER t1 FOREIGN DATA WRAPPER foo;
CREATE SERVER
RESET ROLE;
RESET
\des+
                                                                List of foreign servers
    Name    |           Owner           | Foreign-data wrapper | Access privileges |  Type  | Version |            FDW options            | Description 
------------+---------------------------+----------------------+-------------------+--------+---------+-----------------------------------+-------------
 addr_fserv | abc                       | addr_fdw             |                   |        |         |                                   | 
 integer    | abc                       | addr_fdw             |                   |        |         |                                   | 
 s1         | regress_foreign_data_user | foo                  |                   |        |         |                                   | 
 s2         | regress_foreign_data_user | foo                  |                   |        |         | (host 'a', dbname 'b')            | 
 s3         | regress_foreign_data_user | foo                  |                   | oracle |         |                                   | 
 s4         | regress_foreign_data_user | foo                  |                   | oracle |         | (host 'a', dbname 'b')            | 
 s5         | regress_foreign_data_user | foo                  |                   |        | 15.0    |                                   | 
 s6         | regress_foreign_data_user | foo                  |                   |        | 16.0    | (host 'a', dbname 'b')            | 
 s7         | regress_foreign_data_user | foo                  |                   | oracle | 17.0    | (host 'a', dbname 'b')            | 
 s8         | regress_foreign_data_user | postgresql           |                   |        |         | (host 'localhost', dbname 's8db') | 
 t1         | regress_test_role         | foo                  |                   |        |         |                                   | 
(11 rows)

REVOKE USAGE ON FOREIGN DATA WRAPPER foo FROM regress_test_role;
REVOKE
GRANT USAGE ON FOREIGN DATA WRAPPER foo TO regress_test_indirect;
GRANT
SET ROLE regress_test_role;
SET
CREATE SERVER t2 FOREIGN DATA WRAPPER foo;                 -- ERROR
psql:sql/foreign_data.sql:162: ERROR:  permission denied for foreign-data wrapper foo
RESET ROLE;
RESET
GRANT regress_test_indirect TO regress_test_role;
GRANT ROLE
SET ROLE regress_test_role;
SET
CREATE SERVER t2 FOREIGN DATA WRAPPER foo;
CREATE SERVER
\des+
                                                                List of foreign servers
    Name    |           Owner           | Foreign-data wrapper | Access privileges |  Type  | Version |            FDW options            | Description 
------------+---------------------------+----------------------+-------------------+--------+---------+-----------------------------------+-------------
 addr_fserv | abc                       | addr_fdw             |                   |        |         |                                   | 
 integer    | abc                       | addr_fdw             |                   |        |         |                                   | 
 s1         | regress_foreign_data_user | foo                  |                   |        |         |                                   | 
 s2         | regress_foreign_data_user | foo                  |                   |        |         | (host 'a', dbname 'b')            | 
 s3         | regress_foreign_data_user | foo                  |                   | oracle |         |                                   | 
 s4         | regress_foreign_data_user | foo                  |                   | oracle |         | (host 'a', dbname 'b')            | 
 s5         | regress_foreign_data_user | foo                  |                   |        | 15.0    |                                   | 
 s6         | regress_foreign_data_user | foo                  |                   |        | 16.0    | (host 'a', dbname 'b')            | 
 s7         | regress_foreign_data_user | foo                  |                   | oracle | 17.0    | (host 'a', dbname 'b')            | 
 s8         | regress_foreign_data_user | postgresql           |                   |        |         | (host 'localhost', dbname 's8db') | 
 t1         | regress_test_role         | foo                  |                   |        |         |                                   | 
 t2         | regress_test_role         | foo                  |                   |        |         |                                   | 
(12 rows)

RESET ROLE;
RESET
REVOKE regress_test_indirect FROM regress_test_role;
REVOKE ROLE
-- ALTER SERVER
ALTER SERVER s0;                                            -- ERROR
psql:sql/foreign_data.sql:172: ERROR:  syntax error at or near ";"
LINE 1: ALTER SERVER s0;
                       ^
ALTER SERVER s0 OPTIONS (a '1');                            -- ERROR
psql:sql/foreign_data.sql:173: ERROR:  server "s0" does not exist
ALTER SERVER s1 VERSION '1.0' OPTIONS (servername 's1');
ALTER SERVER
ALTER SERVER s2 VERSION '1.1';
ALTER SERVER
ALTER SERVER s3 OPTIONS ("tns name" 'orcl', port '1521');
ALTER SERVER
GRANT USAGE ON FOREIGN SERVER s1 TO regress_test_role;
GRANT
GRANT USAGE ON FOREIGN SERVER s6 TO regress_test_role2 WITH GRANT OPTION;
GRANT
\des+
                                                                                  List of foreign servers
    Name    |           Owner           | Foreign-data wrapper |                   Access privileges                   |  Type  | Version |            FDW options            | Description 
------------+---------------------------+----------------------+-------------------------------------------------------+--------+---------+-----------------------------------+-------------
 addr_fserv | abc                       | addr_fdw             |                                                       |        |         |                                   | 
 integer    | abc                       | addr_fdw             |                                                       |        |         |                                   | 
 s1         | regress_foreign_data_user | foo                  | regress_foreign_data_user=U/regress_foreign_data_user+|        | 1.0     | (servername 's1')                 | 
            |                           |                      | regress_test_role=U/regress_foreign_data_user         |        |         |                                   | 
 s2         | regress_foreign_data_user | foo                  |                                                       |        | 1.1     | (host 'a', dbname 'b')            | 
 s3         | regress_foreign_data_user | foo                  |                                                       | oracle |         | ("tns name" 'orcl', port '1521')  | 
 s4         | regress_foreign_data_user | foo                  |                                                       | oracle |         | (host 'a', dbname 'b')            | 
 s5         | regress_foreign_data_user | foo                  |                                                       |        | 15.0    |                                   | 
 s6         | regress_foreign_data_user | foo                  | regress_foreign_data_user=U/regress_foreign_data_user+|        | 16.0    | (host 'a', dbname 'b')            | 
            |                           |                      | regress_test_role2=U*/regress_foreign_data_user       |        |         |                                   | 
 s7         | regress_foreign_data_user | foo                  |                                                       | oracle | 17.0    | (host 'a', dbname 'b')            | 
 s8         | regress_foreign_data_user | postgresql           |                                                       |        |         | (host 'localhost', dbname 's8db') | 
 t1         | regress_test_role         | foo                  |                                                       |        |         |                                   | 
 t2         | regress_test_role         | foo                  |                                                       |        |         |                                   | 
(12 rows)

SET ROLE regress_test_role;
SET
ALTER SERVER s1 VERSION '1.1';                              -- ERROR
psql:sql/foreign_data.sql:181: ERROR:  must be owner of foreign server s1
ALTER SERVER s1 OWNER TO regress_test_role;                 -- ERROR
psql:sql/foreign_data.sql:182: ERROR:  must be owner of foreign server s1
RESET ROLE;
RESET
ALTER SERVER s1 OWNER TO regress_test_role;
ALTER SERVER
GRANT regress_test_role2 TO regress_test_role;
GRANT ROLE
SET ROLE regress_test_role;
SET
ALTER SERVER s1 VERSION '1.1';
ALTER SERVER
ALTER SERVER s1 OWNER TO regress_test_role2;                -- ERROR
psql:sql/foreign_data.sql:188: ERROR:  permission denied for foreign-data wrapper foo
RESET ROLE;
RESET
ALTER SERVER s8 OPTIONS (foo '1');                          -- ERROR option validation
psql:sql/foreign_data.sql:190: ERROR:  invalid option "foo"
HINT:  Valid options in this context are: authtype, service, connect_timeout, dbname, host, hostaddr, port, tty, options, requiressl, sslmode, gsslib
ALTER SERVER s8 OPTIONS (connect_timeout '30', SET dbname 'db1', DROP host);
ALTER SERVER
SET ROLE regress_test_role;
SET
ALTER SERVER s1 OWNER TO regress_test_indirect;             -- ERROR
psql:sql/foreign_data.sql:193: ERROR:  must be member of role "regress_test_indirect"
RESET ROLE;
RESET
GRANT regress_test_indirect TO regress_test_role;
GRANT ROLE
SET ROLE regress_test_role;
SET
ALTER SERVER s1 OWNER TO regress_test_indirect;
ALTER SERVER
RESET ROLE;
RESET
GRANT USAGE ON FOREIGN DATA WRAPPER foo TO regress_test_indirect;
GRANT
SET ROLE regress_test_role;
SET
ALTER SERVER s1 OWNER TO regress_test_indirect;
ALTER SERVER
RESET ROLE;
RESET
DROP ROLE regress_test_indirect;                            -- ERROR
psql:sql/foreign_data.sql:203: ERROR:  role "regress_test_indirect" cannot be dropped because some objects depend on it
DETAIL:  owner of server s1
privileges for foreign-data wrapper foo
\des+
                                                                                    List of foreign servers
    Name    |           Owner           | Foreign-data wrapper |                   Access privileges                   |  Type  | Version |             FDW options              | Description 
------------+---------------------------+----------------------+-------------------------------------------------------+--------+---------+--------------------------------------+-------------
 addr_fserv | abc                       | addr_fdw             |                                                       |        |         |                                      | 
 integer    | abc                       | addr_fdw             |                                                       |        |         |                                      | 
 s1         | regress_test_indirect     | foo                  | regress_test_indirect=U/regress_test_indirect         |        | 1.1     | (servername 's1')                    | 
 s2         | regress_foreign_data_user | foo                  |                                                       |        | 1.1     | (host 'a', dbname 'b')               | 
 s3         | regress_foreign_data_user | foo                  |                                                       | oracle |         | ("tns name" 'orcl', port '1521')     | 
 s4         | regress_foreign_data_user | foo                  |                                                       | oracle |         | (host 'a', dbname 'b')               | 
 s5         | regress_foreign_data_user | foo                  |                                                       |        | 15.0    |                                      | 
 s6         | regress_foreign_data_user | foo                  | regress_foreign_data_user=U/regress_foreign_data_user+|        | 16.0    | (host 'a', dbname 'b')               | 
            |                           |                      | regress_test_role2=U*/regress_foreign_data_user       |        |         |                                      | 
 s7         | regress_foreign_data_user | foo                  |                                                       | oracle | 17.0    | (host 'a', dbname 'b')               | 
 s8         | regress_foreign_data_user | postgresql           |                                                       |        |         | (dbname 'db1', connect_timeout '30') | 
 t1         | regress_test_role         | foo                  |                                                       |        |         |                                      | 
 t2         | regress_test_role         | foo                  |                                                       |        |         |                                      | 
(12 rows)

ALTER SERVER s8 RENAME to s8new;
ALTER SERVER
\des+
                                                                                    List of foreign servers
    Name    |           Owner           | Foreign-data wrapper |                   Access privileges                   |  Type  | Version |             FDW options              | Description 
------------+---------------------------+----------------------+-------------------------------------------------------+--------+---------+--------------------------------------+-------------
 addr_fserv | abc                       | addr_fdw             |                                                       |        |         |                                      | 
 integer    | abc                       | addr_fdw             |                                                       |        |         |                                      | 
 s1         | regress_test_indirect     | foo                  | regress_test_indirect=U/regress_test_indirect         |        | 1.1     | (servername 's1')                    | 
 s2         | regress_foreign_data_user | foo                  |                                                       |        | 1.1     | (host 'a', dbname 'b')               | 
 s3         | regress_foreign_data_user | foo                  |                                                       | oracle |         | ("tns name" 'orcl', port '1521')     | 
 s4         | regress_foreign_data_user | foo                  |                                                       | oracle |         | (host 'a', dbname 'b')               | 
 s5         | regress_foreign_data_user | foo                  |                                                       |        | 15.0    |                                      | 
 s6         | regress_foreign_data_user | foo                  | regress_foreign_data_user=U/regress_foreign_data_user+|        | 16.0    | (host 'a', dbname 'b')               | 
            |                           |                      | regress_test_role2=U*/regress_foreign_data_user       |        |         |                                      | 
 s7         | regress_foreign_data_user | foo                  |                                                       | oracle | 17.0    | (host 'a', dbname 'b')               | 
 s8new      | regress_foreign_data_user | postgresql           |                                                       |        |         | (dbname 'db1', connect_timeout '30') | 
 t1         | regress_test_role         | foo                  |                                                       |        |         |                                      | 
 t2         | regress_test_role         | foo                  |                                                       |        |         |                                      | 
(12 rows)

ALTER SERVER s8new RENAME to s8;
ALTER SERVER
-- DROP SERVER
DROP SERVER nonexistent;                                    -- ERROR
psql:sql/foreign_data.sql:211: ERROR:  server "nonexistent" does not exist
DROP SERVER IF EXISTS nonexistent;
psql:sql/foreign_data.sql:212: NOTICE:  server "nonexistent" does not exist, skipping
DROP SERVER
\des
                    List of foreign servers
    Name    |           Owner           | Foreign-data wrapper 
------------+---------------------------+----------------------
 addr_fserv | abc                       | addr_fdw
 integer    | abc                       | addr_fdw
 s1         | regress_test_indirect     | foo
 s2         | regress_foreign_data_user | foo
 s3         | regress_foreign_data_user | foo
 s4         | regress_foreign_data_user | foo
 s5         | regress_foreign_data_user | foo
 s6         | regress_foreign_data_user | foo
 s7         | regress_foreign_data_user | foo
 s8         | regress_foreign_data_user | postgresql
 t1         | regress_test_role         | foo
 t2         | regress_test_role         | foo
(12 rows)

SET ROLE regress_test_role;
SET
DROP SERVER s2;                                             -- ERROR
psql:sql/foreign_data.sql:215: ERROR:  must be owner of foreign server s2
DROP SERVER s1;
DROP SERVER
RESET ROLE;
RESET
\des
                    List of foreign servers
    Name    |           Owner           | Foreign-data wrapper 
------------+---------------------------+----------------------
 addr_fserv | abc                       | addr_fdw
 integer    | abc                       | addr_fdw
 s2         | regress_foreign_data_user | foo
 s3         | regress_foreign_data_user | foo
 s4         | regress_foreign_data_user | foo
 s5         | regress_foreign_data_user | foo
 s6         | regress_foreign_data_user | foo
 s7         | regress_foreign_data_user | foo
 s8         | regress_foreign_data_user | postgresql
 t1         | regress_test_role         | foo
 t2         | regress_test_role         | foo
(11 rows)

ALTER SERVER s2 OWNER TO regress_test_role;
ALTER SERVER
SET ROLE regress_test_role;
SET
DROP SERVER s2;
DROP SERVER
RESET ROLE;
RESET
\des
                    List of foreign servers
    Name    |           Owner           | Foreign-data wrapper 
------------+---------------------------+----------------------
 addr_fserv | abc                       | addr_fdw
 integer    | abc                       | addr_fdw
 s3         | regress_foreign_data_user | foo
 s4         | regress_foreign_data_user | foo
 s5         | regress_foreign_data_user | foo
 s6         | regress_foreign_data_user | foo
 s7         | regress_foreign_data_user | foo
 s8         | regress_foreign_data_user | postgresql
 t1         | regress_test_role         | foo
 t2         | regress_test_role         | foo
(10 rows)

CREATE USER MAPPING FOR current_user SERVER s3;
CREATE USER MAPPING
\deu
        List of user mappings
 Server  |         User name         
---------+---------------------------
 integer | regress_addr_user
 s3      | regress_foreign_data_user
(2 rows)

DROP SERVER s3;                                             -- ERROR
psql:sql/foreign_data.sql:226: ERROR:  cannot drop server s3 because other objects depend on it
DETAIL:  user mapping for regress_foreign_data_user on server s3 depends on server s3
HINT:  Use DROP ... CASCADE to drop the dependent objects too.
DROP SERVER s3 CASCADE;
psql:sql/foreign_data.sql:227: NOTICE:  drop cascades to user mapping for regress_foreign_data_user on server s3
DROP SERVER
\des
                    List of foreign servers
    Name    |           Owner           | Foreign-data wrapper 
------------+---------------------------+----------------------
 addr_fserv | abc                       | addr_fdw
 integer    | abc                       | addr_fdw
 s4         | regress_foreign_data_user | foo
 s5         | regress_foreign_data_user | foo
 s6         | regress_foreign_data_user | foo
 s7         | regress_foreign_data_user | foo
 s8         | regress_foreign_data_user | postgresql
 t1         | regress_test_role         | foo
 t2         | regress_test_role         | foo
(9 rows)

\deu
    List of user mappings
 Server  |     User name     
---------+-------------------
 integer | regress_addr_user
(1 row)

-- CREATE USER MAPPING
CREATE USER MAPPING FOR regress_test_missing_role SERVER s1;  -- ERROR
psql:sql/foreign_data.sql:232: ERROR:  role "regress_test_missing_role" does not exist
CREATE USER MAPPING FOR current_user SERVER s1;             -- ERROR
psql:sql/foreign_data.sql:233: ERROR:  server "s1" does not exist
CREATE USER MAPPING FOR current_user SERVER s4;
CREATE USER MAPPING
CREATE USER MAPPING FOR user SERVER s4;                     -- ERROR duplicate
psql:sql/foreign_data.sql:235: ERROR:  user mapping for "regress_foreign_data_user" already exists for server s4
CREATE USER MAPPING FOR public SERVER s4 OPTIONS ("this mapping" 'is public');
CREATE USER MAPPING
CREATE USER MAPPING FOR user SERVER s8 OPTIONS (username 'test', password 'secret');    -- ERROR
psql:sql/foreign_data.sql:237: ERROR:  invalid option "username"
HINT:  Valid options in this context are: user, password
CREATE USER MAPPING FOR user SERVER s8 OPTIONS (user 'test', password 'secret');
CREATE USER MAPPING
ALTER SERVER s5 OWNER TO regress_test_role;
ALTER SERVER
ALTER SERVER s6 OWNER TO regress_test_indirect;
ALTER SERVER
SET ROLE regress_test_role;
SET
CREATE USER MAPPING FOR current_user SERVER s5;
CREATE USER MAPPING
CREATE USER MAPPING FOR current_user SERVER s6 OPTIONS (username 'test');
CREATE USER MAPPING
CREATE USER MAPPING FOR current_user SERVER s7;             -- ERROR
psql:sql/foreign_data.sql:244: ERROR:  permission denied for foreign server s7
CREATE USER MAPPING FOR public SERVER s8;                   -- ERROR
psql:sql/foreign_data.sql:245: ERROR:  must be owner of foreign server s8
RESET ROLE;
RESET
ALTER SERVER t1 OWNER TO regress_test_indirect;
ALTER SERVER
SET ROLE regress_test_role;
SET
CREATE USER MAPPING FOR current_user SERVER t1 OPTIONS (username 'bob', password 'boo');
CREATE USER MAPPING
CREATE USER MAPPING FOR public SERVER t1;
CREATE USER MAPPING
RESET ROLE;
RESET
\deu
        List of user mappings
 Server  |         User name         
---------+---------------------------
 integer | regress_addr_user
 s4      | public
 s4      | regress_foreign_data_user
 s5      | regress_test_role
 s6      | regress_test_role
 s8      | regress_foreign_data_user
 t1      | public
 t1      | regress_test_role
(8 rows)

-- ALTER USER MAPPING
ALTER USER MAPPING FOR regress_test_missing_role SERVER s4 OPTIONS (gotcha 'true'); -- ERROR
psql:sql/foreign_data.sql:256: ERROR:  role "regress_test_missing_role" does not exist
ALTER USER MAPPING FOR user SERVER ss4 OPTIONS (gotcha 'true'); -- ERROR
psql:sql/foreign_data.sql:257: ERROR:  server "ss4" does not exist
ALTER USER MAPPING FOR public SERVER s5 OPTIONS (gotcha 'true');            -- ERROR
psql:sql/foreign_data.sql:258: ERROR:  user mapping for "public" does not exist for the server
ALTER USER MAPPING FOR current_user SERVER s8 OPTIONS (username 'test');    -- ERROR
psql:sql/foreign_data.sql:259: ERROR:  invalid option "username"
HINT:  Valid options in this context are: user, password
ALTER USER MAPPING FOR current_user SERVER s8 OPTIONS (DROP user, SET password 'public');
ALTER USER MAPPING
SET ROLE regress_test_role;
SET
ALTER USER MAPPING FOR current_user SERVER s5 OPTIONS (ADD modified '1');
ALTER USER MAPPING
ALTER USER MAPPING FOR public SERVER s4 OPTIONS (ADD modified '1'); -- ERROR
psql:sql/foreign_data.sql:263: ERROR:  must be owner of foreign server s4
ALTER USER MAPPING FOR public SERVER t1 OPTIONS (ADD modified '1');
ALTER USER MAPPING
RESET ROLE;
RESET
\deu+
                         List of user mappings
 Server  |         User name         |           FDW options            
---------+---------------------------+----------------------------------
 integer | regress_addr_user         | 
 s4      | public                    | ("this mapping" 'is public')
 s4      | regress_foreign_data_user | 
 s5      | regress_test_role         | (modified '1')
 s6      | regress_test_role         | (username 'test')
 s8      | regress_foreign_data_user | (password 'public')
 t1      | public                    | (modified '1')
 t1      | regress_test_role         | (username 'bob', password 'boo')
(8 rows)

-- DROP USER MAPPING
DROP USER MAPPING FOR regress_test_missing_role SERVER s4;  -- ERROR
psql:sql/foreign_data.sql:269: ERROR:  role "regress_test_missing_role" does not exist
DROP USER MAPPING FOR user SERVER ss4;
psql:sql/foreign_data.sql:270: ERROR:  server "ss4" does not exist
DROP USER MAPPING FOR public SERVER s7;                     -- ERROR
psql:sql/foreign_data.sql:271: ERROR:  user mapping for "public" does not exist for the server
DROP USER MAPPING IF EXISTS FOR regress_test_missing_role SERVER s4;
psql:sql/foreign_data.sql:272: NOTICE:  role "regress_test_missing_role" does not exist, skipping
DROP USER MAPPING
DROP USER MAPPING IF EXISTS FOR user SERVER ss4;
psql:sql/foreign_data.sql:273: NOTICE:  server does not exist, skipping
DROP USER MAPPING
DROP USER MAPPING IF EXISTS FOR public SERVER s7;
psql:sql/foreign_data.sql:274: NOTICE:  user mapping for "public" does not exist for the server, skipping
DROP USER MAPPING
CREATE USER MAPPING FOR public SERVER s8;
CREATE USER MAPPING
SET ROLE regress_test_role;
SET
DROP USER MAPPING FOR public SERVER s8;                     -- ERROR
psql:sql/foreign_data.sql:277: ERROR:  must be owner of foreign server s8
RESET ROLE;
RESET
DROP SERVER s7;
DROP SERVER
\deu
        List of user mappings
 Server  |         User name         
---------+---------------------------
 integer | regress_addr_user
 s4      | public
 s4      | regress_foreign_data_user
 s5      | regress_test_role
 s6      | regress_test_role
 s8      | public
 s8      | regress_foreign_data_user
 t1      | public
 t1      | regress_test_role
(9 rows)

-- CREATE FOREIGN TABLE
CREATE SCHEMA foreign_schema;
CREATE SCHEMA
CREATE SERVER s0 FOREIGN DATA WRAPPER dummy;
CREATE SERVER
CREATE FOREIGN TABLE ft1 ();                                    -- ERROR
psql:sql/foreign_data.sql:285: ERROR:  syntax error at or near ";"
LINE 1: CREATE FOREIGN TABLE ft1 ();
                                   ^
CREATE FOREIGN TABLE ft1 () SERVER no_server;                   -- ERROR
psql:sql/foreign_data.sql:286: ERROR:  server "no_server" does not exist
CREATE FOREIGN TABLE ft1 () SERVER s0;                -- ERROR
CREATE FOREIGN TABLE
CREATE FOREIGN TABLE ft1 (
	c1 integer OPTIONS ("param 1" 'val1') PRIMARY KEY,
	c2 text OPTIONS (param2 'val2', param3 'val3'),
	c3 date
) SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value'); -- ERROR
psql:sql/foreign_data.sql:292: ERROR:  primary key constraints are not supported on foreign tables
LINE 2:  c1 integer OPTIONS ("param 1" 'val1') PRIMARY KEY,
                                               ^
CREATE TABLE ref_table (id integer PRIMARY KEY);
CREATE TABLE
CREATE FOREIGN TABLE ft1 (
	c1 integer OPTIONS ("param 1" 'val1'),
	c2 text OPTIONS (param2 'val2', param3 'val3'),
	c3 date
) SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value'); -- ERROR
psql:sql/foreign_data.sql:298: ERROR:  relation "ft1" already exists
DROP TABLE ref_table;
DROP TABLE
CREATE FOREIGN TABLE ft1 (
	c1 integer OPTIONS ("param 1" 'val1') NOT NULL,
	c2 text OPTIONS (param2 'val2', param3 'val3'),
	c3 date,
	UNIQUE (c3)
) SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value'); -- ERROR
psql:sql/foreign_data.sql:305: ERROR:  unique constraints are not supported on foreign tables
LINE 5:  UNIQUE (c3)
         ^
CREATE FOREIGN TABLE ft1 (
	c1 integer OPTIONS ("param 1" 'val1') NOT NULL,
	c2 text OPTIONS (param2 'val2', param3 'val3'),
	c3 date
) SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value');
psql:sql/foreign_data.sql:310: ERROR:  relation "ft1" already exists
COMMENT ON FOREIGN TABLE ft1 IS 'ft1';
COMMENT
COMMENT ON COLUMN ft1.c1 IS 'ft1.c1';
psql:sql/foreign_data.sql:312: ERROR:  column "c1" of relation "ft1" does not exist
\d+ ft1
                                     Foreign table "public.ft1"
 Column | Type | Collation | Nullable | Default | FDW options | Storage | Stats target | Description 
--------+------+-----------+----------+---------+-------------+---------+--------------+-------------
Server: s0

\det+
               List of foreign tables
 Schema | Table | Server | FDW options | Description 
--------+-------+--------+-------------+-------------
 public | ft1   | s0     |             | ft1
(1 row)

CREATE INDEX id_ft1_c2 ON ft1 (c2);                             -- ERROR
psql:sql/foreign_data.sql:315: ERROR:  cannot create index on foreign table "ft1"
SELECT * FROM ft1;                                              -- ERROR
psql:sql/foreign_data.sql:316: ERROR:  foreign-data wrapper "dummy" has no handler
EXPLAIN SELECT * FROM ft1;                                      -- ERROR
psql:sql/foreign_data.sql:317: ERROR:  foreign-data wrapper "dummy" has no handler
CREATE TABLE lt1 (a INT) PARTITION BY RANGE (a);
CREATE TABLE
CREATE FOREIGN TABLE ft_part1
  PARTITION OF lt1 FOR VALUES FROM (0) TO (1000) SERVER s0;
CREATE FOREIGN TABLE
CREATE INDEX ON lt1 (a);                              -- skips partition
CREATE INDEX
CREATE UNIQUE INDEX ON lt1 (a);                                 -- ERROR
psql:sql/foreign_data.sql:323: ERROR:  cannot create unique index on partitioned table "lt1"
DETAIL:  Table "lt1" contains partitions that are foreign tables.
ALTER TABLE lt1 ADD PRIMARY KEY (a);                            -- ERROR
psql:sql/foreign_data.sql:324: ERROR:  cannot create unique index on partitioned table "lt1"
DETAIL:  Table "lt1" contains partitions that are foreign tables.
DROP TABLE lt1;
DROP TABLE
CREATE TABLE lt1 (a INT) PARTITION BY RANGE (a);
CREATE TABLE
CREATE INDEX ON lt1 (a);
CREATE INDEX
CREATE FOREIGN TABLE ft_part1
  PARTITION OF lt1 FOR VALUES FROM (0) TO (1000) SERVER s0;
CREATE FOREIGN TABLE
CREATE FOREIGN TABLE ft_part2 PARTITION OF lt1 FOR VALUES FROM (1000) TO (2000) SERVER s0;
CREATE FOREIGN TABLE
DROP FOREIGN TABLE ft_part1, ft_part2;
DROP FOREIGN TABLE
CREATE UNIQUE INDEX ON lt1 (a);
CREATE INDEX
ALTER TABLE lt1 ADD PRIMARY KEY (a);
ALTER TABLE
CREATE FOREIGN TABLE ft_part1 PARTITION OF lt1 FOR VALUES FROM (0) TO (1000) SERVER s0;     -- ERROR
psql:sql/foreign_data.sql:335: ERROR:  cannot create foreign partition of partitioned table "lt1"
DETAIL:  Table "lt1" contains indexes that are unique.
CREATE FOREIGN TABLE ft_part2 PARTITION OF lt1 FOR VALUES FROM (1000) TO (2000) SERVER s0;
psql:sql/foreign_data.sql:336: ERROR:  cannot create foreign partition of partitioned table "lt1"
DETAIL:  Table "lt1" contains indexes that are unique.
DROP TABLE lt1;
DROP TABLE
DROP FOREIGN TABLE ft_part2;
psql:sql/foreign_data.sql:338: ERROR:  foreign table "ft_part2" does not exist
CREATE TABLE lt1 (a INT) PARTITION BY RANGE (a);
CREATE TABLE
CREATE INDEX ON lt1 (a);
CREATE INDEX
CREATE TABLE lt1_part1
  PARTITION OF lt1 FOR VALUES FROM (0) TO (1000)
  PARTITION BY RANGE (a);
CREATE TABLE
CREATE FOREIGN TABLE ft_part_1_1
  PARTITION OF lt1_part1 FOR VALUES FROM (0) TO (100) SERVER s0;
CREATE FOREIGN TABLE
CREATE FOREIGN TABLE ft_part_1_2 PARTITION OF lt1_part1 FOR VALUES FROM (100) TO (200) SERVER s0;
CREATE FOREIGN TABLE
CREATE UNIQUE INDEX ON lt1 (a);
psql:sql/foreign_data.sql:348: ERROR:  cannot create unique index on partitioned table "lt1"
DETAIL:  Table "lt1" contains partitions that are foreign tables.
ALTER TABLE lt1 ADD PRIMARY KEY (a);
psql:sql/foreign_data.sql:349: ERROR:  cannot create unique index on partitioned table "lt1_part1"
DETAIL:  Table "lt1_part1" contains partitions that are foreign tables.
DROP FOREIGN TABLE ft_part_1_1, ft_part_1_2;
DROP FOREIGN TABLE
CREATE UNIQUE INDEX ON lt1 (a);
CREATE INDEX
ALTER TABLE lt1 ADD PRIMARY KEY (a);
ALTER TABLE
CREATE FOREIGN TABLE ft_part_1_1
  PARTITION OF lt1_part1 FOR VALUES FROM (0) TO (100) SERVER s0;
psql:sql/foreign_data.sql:354: ERROR:  cannot create foreign partition of partitioned table "lt1_part1"
DETAIL:  Table "lt1_part1" contains indexes that are unique.
CREATE FOREIGN TABLE ft_part_1_2 PARTITION OF lt1_part1 FOR VALUES FROM (100) TO (200) SERVER s0;
psql:sql/foreign_data.sql:355: ERROR:  cannot create foreign partition of partitioned table "lt1_part1"
DETAIL:  Table "lt1_part1" contains indexes that are unique.
DROP TABLE lt1;
DROP TABLE
DROP FOREIGN TABLE ft_part_1_2;
psql:sql/foreign_data.sql:357: ERROR:  foreign table "ft_part_1_2" does not exist
-- ALTER FOREIGN TABLE
COMMENT ON FOREIGN TABLE ft1 IS 'foreign table';
COMMENT
COMMENT ON FOREIGN TABLE ft1 IS NULL;
COMMENT
COMMENT ON COLUMN ft1.c1 IS 'foreign column';
psql:sql/foreign_data.sql:362: ERROR:  column "c1" of relation "ft1" does not exist
COMMENT ON COLUMN ft1.c1 IS NULL;
psql:sql/foreign_data.sql:363: ERROR:  column "c1" of relation "ft1" does not exist
ALTER FOREIGN TABLE ft1 ADD COLUMN c4 integer;
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE ft1 ADD COLUMN c5 integer DEFAULT 0;
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE ft1 ADD COLUMN c6 integer;
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE ft1 ADD COLUMN c7 integer NOT NULL;
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE ft1 ADD COLUMN c8 integer;
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE ft1 ADD COLUMN c9 integer;
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE ft1 ADD COLUMN c10 integer OPTIONS (p1 'v1');
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE ft1 ALTER COLUMN c4 SET DEFAULT 0;
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE ft1 ALTER COLUMN c5 DROP DEFAULT;
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE ft1 ALTER COLUMN c6 SET NOT NULL;
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE ft1 ALTER COLUMN c7 DROP NOT NULL;
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE ft1 ALTER COLUMN c8 TYPE char(10) USING '0'; -- ERROR
psql:sql/foreign_data.sql:377: ERROR:  Can not alter column type using non-TypeCast expression
ALTER FOREIGN TABLE ft1 ALTER COLUMN c8 TYPE char(10);
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE ft1 ALTER COLUMN c8 SET DATA TYPE text;
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE ft1 ALTER COLUMN xmin OPTIONS (ADD p1 'v1'); -- ERROR
psql:sql/foreign_data.sql:380: ERROR:  cannot alter system column "xmin"
ALTER FOREIGN TABLE ft1 ALTER COLUMN c7 OPTIONS (ADD p1 'v1', ADD p2 'v2'),
                        ALTER COLUMN c8 OPTIONS (ADD p1 'v1', ADD p2 'v2');
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE ft1 ALTER COLUMN c8 OPTIONS (SET p2 'V2', DROP p1);
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE ft1 ALTER COLUMN c1 SET (n_distinct = 100);
psql:sql/foreign_data.sql:384: ERROR:  column "c1" of relation "ft1" does not exist
\d+ ft1
                                           Foreign table "public.ft1"
 Column |  Type   | Collation | Nullable | Default |    FDW options     | Storage  | Stats target | Description 
--------+---------+-----------+----------+---------+--------------------+----------+--------------+-------------
 c4     | integer |           |          | 0       |                    | plain    |              | 
 c5     | integer |           |          |         |                    | plain    |              | 
 c6     | integer |           | not null |         |                    | plain    |              | 
 c7     | integer |           |          |         | (p1 'v1', p2 'v2') | plain    |              | 
 c8     | text    |           |          |         | (p2 'V2')          | extended |              | 
 c9     | integer |           |          |         |                    | plain    |              | 
 c10    | integer |           |          |         | (p1 'v1')          | plain    |              | 
Server: s0

-- can't change the column type if it's used elsewhere
ALTER FOREIGN TABLE ft1 ALTER COLUMN c8 SET DATA TYPE integer;	-- ERROR
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE ft1 ADD PRIMARY KEY (c7);                   -- ERROR
psql:sql/foreign_data.sql:388: ERROR:  primary key constraints are not supported on foreign tables
LINE 1: ALTER FOREIGN TABLE ft1 ADD PRIMARY KEY (c7);
                                    ^
ALTER FOREIGN TABLE ft1 DROP CONSTRAINT no_const;               -- ERROR
psql:sql/foreign_data.sql:389: ERROR:  constraint "no_const" of relation "ft1" does not exist
ALTER FOREIGN TABLE ft1 DROP CONSTRAINT IF EXISTS no_const;
psql:sql/foreign_data.sql:390: NOTICE:  constraint "no_const" of relation "ft1" does not exist, skipping
ALTER FOREIGN TABLE
--ALTER FOREIGN TABLE ft1 SET WITH OIDS;
ALTER FOREIGN TABLE ft1 OWNER TO regress_test_role;
ALTER FOREIGN TABLE
--ALTER FOREIGN TABLE ft1 OPTIONS (DROP delimiter, SET quote '~', ADD escape '@');
ALTER FOREIGN TABLE ft1 DROP COLUMN no_column;                  -- ERROR
psql:sql/foreign_data.sql:394: ERROR:  column "no_column" of relation "ft1" does not exist
ALTER FOREIGN TABLE ft1 DROP COLUMN IF EXISTS no_column;
psql:sql/foreign_data.sql:395: NOTICE:  column "no_column" of relation "ft1" does not exist, skipping
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE ft1 DROP COLUMN c9;
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE ft1 SET SCHEMA foreign_schema;
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE ft1 SET TABLESPACE ts;                      -- ERROR
psql:sql/foreign_data.sql:398: ERROR:  Kunlun-db: Alter table is not supported
ALTER FOREIGN TABLE foreign_schema.ft1 RENAME c1 TO foreign_column_1;
psql:sql/foreign_data.sql:399: ERROR:  column "c1" does not exist
ALTER FOREIGN TABLE foreign_schema.ft1 RENAME TO foreign_table_1;
ALTER FOREIGN TABLE
\d foreign_schema.foreign_table_1
             Foreign table "foreign_schema.foreign_table_1"
 Column |  Type   | Collation | Nullable | Default |    FDW options     
--------+---------+-----------+----------+---------+--------------------
 c4     | integer |           |          | 0       | 
 c5     | integer |           |          |         | 
 c6     | integer |           | not null |         | 
 c7     | integer |           |          |         | (p1 'v1', p2 'v2')
 c8     | integer |           |          |         | (p2 'V2')
 c10    | integer |           |          |         | (p1 'v1')
Server: s0

-- alter noexisting table
ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ADD COLUMN c4 integer;
psql:sql/foreign_data.sql:404: NOTICE:  relation "doesnt_exist_ft1" does not exist, skipping
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ADD COLUMN c6 integer;
psql:sql/foreign_data.sql:405: NOTICE:  relation "doesnt_exist_ft1" does not exist, skipping
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ADD COLUMN c7 integer NOT NULL;
psql:sql/foreign_data.sql:406: NOTICE:  relation "doesnt_exist_ft1" does not exist, skipping
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ADD COLUMN c8 integer;
psql:sql/foreign_data.sql:407: NOTICE:  relation "doesnt_exist_ft1" does not exist, skipping
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ADD COLUMN c9 integer;
psql:sql/foreign_data.sql:408: NOTICE:  relation "doesnt_exist_ft1" does not exist, skipping
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ADD COLUMN c10 integer OPTIONS (p1 'v1');
psql:sql/foreign_data.sql:409: NOTICE:  relation "doesnt_exist_ft1" does not exist, skipping
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ALTER COLUMN c6 SET NOT NULL;
psql:sql/foreign_data.sql:411: NOTICE:  relation "doesnt_exist_ft1" does not exist, skipping
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ALTER COLUMN c7 DROP NOT NULL;
psql:sql/foreign_data.sql:412: NOTICE:  relation "doesnt_exist_ft1" does not exist, skipping
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ALTER COLUMN c8 TYPE char(10);
psql:sql/foreign_data.sql:413: NOTICE:  relation "doesnt_exist_ft1" does not exist, skipping
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ALTER COLUMN c8 SET DATA TYPE text;
psql:sql/foreign_data.sql:414: NOTICE:  relation "doesnt_exist_ft1" does not exist, skipping
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ALTER COLUMN c7 OPTIONS (ADD p1 'v1', ADD p2 'v2'),
                        ALTER COLUMN c8 OPTIONS (ADD p1 'v1', ADD p2 'v2');
psql:sql/foreign_data.sql:416: NOTICE:  relation "doesnt_exist_ft1" does not exist, skipping
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ALTER COLUMN c8 OPTIONS (SET p2 'V2', DROP p1);
psql:sql/foreign_data.sql:417: NOTICE:  relation "doesnt_exist_ft1" does not exist, skipping
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 DROP CONSTRAINT IF EXISTS no_const;
psql:sql/foreign_data.sql:419: NOTICE:  relation "doesnt_exist_ft1" does not exist, skipping
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 OWNER TO regress_test_role;
psql:sql/foreign_data.sql:420: NOTICE:  relation "doesnt_exist_ft1" does not exist, skipping
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 OPTIONS (DROP delimiter, SET quote '~', ADD escape '@');
psql:sql/foreign_data.sql:421: ERROR:  Kunlun-db: Alter table is not supported
ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 DROP COLUMN IF EXISTS no_column;
psql:sql/foreign_data.sql:422: NOTICE:  relation "doesnt_exist_ft1" does not exist, skipping
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 DROP COLUMN c9;
psql:sql/foreign_data.sql:423: NOTICE:  relation "doesnt_exist_ft1" does not exist, skipping
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 SET SCHEMA foreign_schema;
psql:sql/foreign_data.sql:424: NOTICE:  relation "doesnt_exist_ft1" does not exist, skipping
ALTER FOREIGN TABLE
ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 RENAME c1 TO foreign_column_1;
psql:sql/foreign_data.sql:425: NOTICE:  relation "doesnt_exist_ft1" does not exist, skipping
ALTER TABLE
ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 RENAME TO foreign_table_1;
psql:sql/foreign_data.sql:426: NOTICE:  relation "doesnt_exist_ft1" does not exist, skipping
ALTER FOREIGN TABLE
-- Information schema
SELECT * FROM information_schema.foreign_data_wrappers ORDER BY 1, 2;
 foreign_data_wrapper_catalog | foreign_data_wrapper_name | authorization_identifier  | library_name | foreign_data_wrapper_language 
------------------------------+---------------------------+---------------------------+--------------+-------------------------------
 regress                      | addr_fdw                  | abc                       |              | c
 regress                      | dummy                     | regress_foreign_data_user |              | c
 regress                      | foo                       | regress_foreign_data_user |              | c
 regress                      | postgresql                | regress_foreign_data_user |              | c
(4 rows)

SELECT * FROM information_schema.foreign_data_wrapper_options ORDER BY 1, 2, 3;
 foreign_data_wrapper_catalog | foreign_data_wrapper_name | option_name  | option_value 
------------------------------+---------------------------+--------------+--------------
 regress                      | foo                       | test wrapper | true
(1 row)

SELECT * FROM information_schema.foreign_servers ORDER BY 1, 2;
 foreign_server_catalog | foreign_server_name | foreign_data_wrapper_catalog | foreign_data_wrapper_name | foreign_server_type | foreign_server_version | authorization_identifier  
------------------------+---------------------+------------------------------+---------------------------+---------------------+------------------------+---------------------------
 regress                | addr_fserv          | regress                      | addr_fdw                  |                     |                        | abc
 regress                | integer             | regress                      | addr_fdw                  |                     |                        | abc
 regress                | s0                  | regress                      | dummy                     |                     |                        | regress_foreign_data_user
 regress                | s4                  | regress                      | foo                       | oracle              |                        | regress_foreign_data_user
 regress                | s5                  | regress                      | foo                       |                     | 15.0                   | regress_test_role
 regress                | s6                  | regress                      | foo                       |                     | 16.0                   | regress_test_indirect
 regress                | s8                  | regress                      | postgresql                |                     |                        | regress_foreign_data_user
 regress                | t1                  | regress                      | foo                       |                     |                        | regress_test_indirect
 regress                | t2                  | regress                      | foo                       |                     |                        | regress_test_role
(9 rows)

SELECT * FROM information_schema.foreign_server_options ORDER BY 1, 2, 3;
 foreign_server_catalog | foreign_server_name |   option_name   | option_value 
------------------------+---------------------+-----------------+--------------
 regress                | s4                  | dbname          | b
 regress                | s4                  | host            | a
 regress                | s6                  | dbname          | b
 regress                | s6                  | host            | a
 regress                | s8                  | connect_timeout | 30
 regress                | s8                  | dbname          | db1
(6 rows)

SELECT * FROM information_schema.user_mappings ORDER BY lower(authorization_identifier), 2, 3;
 authorization_identifier  | foreign_server_catalog | foreign_server_name 
---------------------------+------------------------+---------------------
 PUBLIC                    | regress                | s4
 PUBLIC                    | regress                | s8
 PUBLIC                    | regress                | t1
 regress_addr_user         | regress                | integer
 regress_foreign_data_user | regress                | s4
 regress_foreign_data_user | regress                | s8
 regress_test_role         | regress                | s5
 regress_test_role         | regress                | s6
 regress_test_role         | regress                | t1
(9 rows)

SELECT * FROM information_schema.user_mapping_options ORDER BY lower(authorization_identifier), 2, 3, 4;
 authorization_identifier  | foreign_server_catalog | foreign_server_name | option_name  | option_value 
---------------------------+------------------------+---------------------+--------------+--------------
 PUBLIC                    | regress                | s4                  | this mapping | is public
 PUBLIC                    | regress                | t1                  | modified     | 1
 regress_foreign_data_user | regress                | s8                  | password     | public
 regress_test_role         | regress                | s5                  | modified     | 1
 regress_test_role         | regress                | s6                  | username     | test
 regress_test_role         | regress                | t1                  | password     | boo
 regress_test_role         | regress                | t1                  | username     | bob
(7 rows)

SELECT * FROM information_schema.usage_privileges WHERE object_type LIKE 'FOREIGN%' AND object_name IN ('s6', 'foo') ORDER BY 1, 2, 3, 4, 5;
          grantor          |          grantee          | object_catalog | object_schema | object_name |     object_type      | privilege_type | is_grantable 
---------------------------+---------------------------+----------------+---------------+-------------+----------------------+----------------+--------------
 regress_foreign_data_user | regress_foreign_data_user | regress        |               | foo         | FOREIGN DATA WRAPPER | USAGE          | YES
 regress_foreign_data_user | regress_test_indirect     | regress        |               | foo         | FOREIGN DATA WRAPPER | USAGE          | NO
 regress_test_indirect     | regress_test_indirect     | regress        |               | s6          | FOREIGN SERVER       | USAGE          | YES
 regress_test_indirect     | regress_test_role2        | regress        |               | s6          | FOREIGN SERVER       | USAGE          | YES
(4 rows)

SELECT * FROM information_schema.role_usage_grants WHERE object_type LIKE 'FOREIGN%' AND object_name IN ('s6', 'foo') ORDER BY 1, 2, 3, 4, 5;
          grantor          |          grantee          | object_catalog | object_schema | object_name |     object_type      | privilege_type | is_grantable 
---------------------------+---------------------------+----------------+---------------+-------------+----------------------+----------------+--------------
 regress_foreign_data_user | regress_foreign_data_user | regress        |               | foo         | FOREIGN DATA WRAPPER | USAGE          | YES
 regress_foreign_data_user | regress_test_indirect     | regress        |               | foo         | FOREIGN DATA WRAPPER | USAGE          | NO
 regress_test_indirect     | regress_test_indirect     | regress        |               | s6          | FOREIGN SERVER       | USAGE          | YES
 regress_test_indirect     | regress_test_role2        | regress        |               | s6          | FOREIGN SERVER       | USAGE          | YES
(4 rows)

SELECT * FROM information_schema.foreign_tables ORDER BY 1, 2, 3;
 foreign_table_catalog | foreign_table_schema | foreign_table_name | foreign_server_catalog | foreign_server_name 
-----------------------+----------------------+--------------------+------------------------+---------------------
 regress               | foreign_schema       | foreign_table_1    | regress                | s0
(1 row)

SELECT * FROM information_schema.foreign_table_options ORDER BY 1, 2, 3, 4;
 foreign_table_catalog | foreign_table_schema | foreign_table_name | option_name | option_value 
-----------------------+----------------------+--------------------+-------------+--------------
(0 rows)

SET ROLE regress_test_role;
SET
SELECT * FROM information_schema.user_mapping_options ORDER BY 1, 2, 3, 4;
 authorization_identifier | foreign_server_catalog | foreign_server_name | option_name | option_value 
--------------------------+------------------------+---------------------+-------------+--------------
 PUBLIC                   | regress                | t1                  | modified    | 1
 regress_test_role        | regress                | s5                  | modified    | 1
 regress_test_role        | regress                | s6                  | username    | test
 regress_test_role        | regress                | t1                  | password    | boo
 regress_test_role        | regress                | t1                  | username    | bob
(5 rows)

SELECT * FROM information_schema.usage_privileges WHERE object_type LIKE 'FOREIGN%' AND object_name IN ('s6', 'foo') ORDER BY 1, 2, 3, 4, 5;
          grantor          |        grantee        | object_catalog | object_schema | object_name |     object_type      | privilege_type | is_grantable 
---------------------------+-----------------------+----------------+---------------+-------------+----------------------+----------------+--------------
 regress_foreign_data_user | regress_test_indirect | regress        |               | foo         | FOREIGN DATA WRAPPER | USAGE          | NO
 regress_test_indirect     | regress_test_indirect | regress        |               | s6          | FOREIGN SERVER       | USAGE          | YES
 regress_test_indirect     | regress_test_role2    | regress        |               | s6          | FOREIGN SERVER       | USAGE          | YES
(3 rows)

SELECT * FROM information_schema.role_usage_grants WHERE object_type LIKE 'FOREIGN%' AND object_name IN ('s6', 'foo') ORDER BY 1, 2, 3, 4, 5;
          grantor          |        grantee        | object_catalog | object_schema | object_name |     object_type      | privilege_type | is_grantable 
---------------------------+-----------------------+----------------+---------------+-------------+----------------------+----------------+--------------
 regress_foreign_data_user | regress_test_indirect | regress        |               | foo         | FOREIGN DATA WRAPPER | USAGE          | NO
 regress_test_indirect     | regress_test_indirect | regress        |               | s6          | FOREIGN SERVER       | USAGE          | YES
 regress_test_indirect     | regress_test_role2    | regress        |               | s6          | FOREIGN SERVER       | USAGE          | YES
(3 rows)

DROP USER MAPPING FOR current_user SERVER t1;
DROP USER MAPPING
SET ROLE regress_test_role2;
SET
SELECT * FROM information_schema.user_mapping_options ORDER BY 1, 2, 3, 4;
 authorization_identifier | foreign_server_catalog | foreign_server_name | option_name | option_value 
--------------------------+------------------------+---------------------+-------------+--------------
 regress_test_role        | regress                | s6                  | username    | 
(1 row)

RESET ROLE;
RESET
-- has_foreign_data_wrapper_privilege
SELECT has_foreign_data_wrapper_privilege('regress_test_role',
    (SELECT oid FROM pg_foreign_data_wrapper WHERE fdwname='foo'), 'USAGE');
 has_foreign_data_wrapper_privilege 
------------------------------------
 t
(1 row)

SELECT has_foreign_data_wrapper_privilege('regress_test_role', 'foo', 'USAGE');
 has_foreign_data_wrapper_privilege 
------------------------------------
 t
(1 row)

SELECT has_foreign_data_wrapper_privilege(
    (SELECT oid FROM pg_roles WHERE rolname='regress_test_role'),
    (SELECT oid FROM pg_foreign_data_wrapper WHERE fdwname='foo'), 'USAGE');
 has_foreign_data_wrapper_privilege 
------------------------------------
 t
(1 row)

SELECT has_foreign_data_wrapper_privilege(
    (SELECT oid FROM pg_foreign_data_wrapper WHERE fdwname='foo'), 'USAGE');
 has_foreign_data_wrapper_privilege 
------------------------------------
 t
(1 row)

SELECT has_foreign_data_wrapper_privilege(
    (SELECT oid FROM pg_roles WHERE rolname='regress_test_role'), 'foo', 'USAGE');
 has_foreign_data_wrapper_privilege 
------------------------------------
 t
(1 row)

SELECT has_foreign_data_wrapper_privilege('foo', 'USAGE');
 has_foreign_data_wrapper_privilege 
------------------------------------
 t
(1 row)

GRANT USAGE ON FOREIGN DATA WRAPPER foo TO regress_test_role;
GRANT
SELECT has_foreign_data_wrapper_privilege('regress_test_role', 'foo', 'USAGE');
 has_foreign_data_wrapper_privilege 
------------------------------------
 t
(1 row)

-- has_server_privilege
SELECT has_server_privilege('regress_test_role',
    (SELECT oid FROM pg_foreign_server WHERE srvname='s8'), 'USAGE');
 has_server_privilege 
----------------------
 f
(1 row)

SELECT has_server_privilege('regress_test_role', 's8', 'USAGE');
 has_server_privilege 
----------------------
 f
(1 row)

SELECT has_server_privilege(
    (SELECT oid FROM pg_roles WHERE rolname='regress_test_role'),
    (SELECT oid FROM pg_foreign_server WHERE srvname='s8'), 'USAGE');
 has_server_privilege 
----------------------
 f
(1 row)

SELECT has_server_privilege(
    (SELECT oid FROM pg_foreign_server WHERE srvname='s8'), 'USAGE');
 has_server_privilege 
----------------------
 t
(1 row)

SELECT has_server_privilege(
    (SELECT oid FROM pg_roles WHERE rolname='regress_test_role'), 's8', 'USAGE');
 has_server_privilege 
----------------------
 f
(1 row)

SELECT has_server_privilege('s8', 'USAGE');
 has_server_privilege 
----------------------
 t
(1 row)

GRANT USAGE ON FOREIGN SERVER s8 TO regress_test_role;
GRANT
SELECT has_server_privilege('regress_test_role', 's8', 'USAGE');
 has_server_privilege 
----------------------
 t
(1 row)

REVOKE USAGE ON FOREIGN SERVER s8 FROM regress_test_role;
REVOKE
GRANT USAGE ON FOREIGN SERVER s4 TO regress_test_role;
GRANT
DROP USER MAPPING FOR public SERVER s4;
DROP USER MAPPING
ALTER SERVER s6 OPTIONS (DROP host, DROP dbname);
ALTER SERVER
ALTER USER MAPPING FOR regress_test_role SERVER s6 OPTIONS (DROP username);
ALTER USER MAPPING
ALTER FOREIGN DATA WRAPPER foo VALIDATOR postgresql_fdw_validator;
psql:sql/foreign_data.sql:485: WARNING:  changing the foreign-data wrapper validator can cause the options for dependent objects to become invalid
ALTER FOREIGN DATA WRAPPER
-- Privileges
SET ROLE regress_unprivileged_role;
SET
CREATE FOREIGN DATA WRAPPER foobar;                             -- ERROR
psql:sql/foreign_data.sql:489: ERROR:  permission denied to create foreign-data wrapper "foobar"
HINT:  Must be superuser to create a foreign-data wrapper.
ALTER FOREIGN DATA WRAPPER foo OPTIONS (gotcha 'true');         -- ERROR
psql:sql/foreign_data.sql:490: ERROR:  permission denied to alter foreign-data wrapper "foo"
HINT:  Must be superuser to alter a foreign-data wrapper.
ALTER FOREIGN DATA WRAPPER foo OWNER TO regress_unprivileged_role; -- ERROR
psql:sql/foreign_data.sql:491: ERROR:  permission denied to change owner of foreign-data wrapper "foo"
HINT:  Must be superuser to change owner of a foreign-data wrapper.
DROP FOREIGN DATA WRAPPER foo;                                  -- ERROR
psql:sql/foreign_data.sql:492: ERROR:  must be owner of foreign-data wrapper foo
GRANT USAGE ON FOREIGN DATA WRAPPER foo TO regress_test_role;   -- ERROR
psql:sql/foreign_data.sql:493: ERROR:  permission denied for foreign-data wrapper foo
CREATE SERVER s9 FOREIGN DATA WRAPPER foo;                      -- ERROR
psql:sql/foreign_data.sql:494: ERROR:  permission denied for foreign-data wrapper foo
ALTER SERVER s4 VERSION '0.5';                                  -- ERROR
psql:sql/foreign_data.sql:495: ERROR:  must be owner of foreign server s4
ALTER SERVER s4 OWNER TO regress_unprivileged_role;             -- ERROR
psql:sql/foreign_data.sql:496: ERROR:  must be owner of foreign server s4
DROP SERVER s4;                                                 -- ERROR
psql:sql/foreign_data.sql:497: ERROR:  must be owner of foreign server s4
GRANT USAGE ON FOREIGN SERVER s4 TO regress_test_role;          -- ERROR
psql:sql/foreign_data.sql:498: ERROR:  permission denied for foreign server s4
CREATE USER MAPPING FOR public SERVER s4;                       -- ERROR
psql:sql/foreign_data.sql:499: ERROR:  must be owner of foreign server s4
ALTER USER MAPPING FOR regress_test_role SERVER s6 OPTIONS (gotcha 'true'); -- ERROR
psql:sql/foreign_data.sql:500: ERROR:  must be owner of foreign server s6
DROP USER MAPPING FOR regress_test_role SERVER s6;              -- ERROR
psql:sql/foreign_data.sql:501: ERROR:  must be owner of foreign server s6
RESET ROLE;
RESET
GRANT USAGE ON FOREIGN DATA WRAPPER postgresql TO regress_unprivileged_role;
GRANT
GRANT USAGE ON FOREIGN DATA WRAPPER foo TO regress_unprivileged_role WITH GRANT OPTION;
GRANT
SET ROLE regress_unprivileged_role;
SET
CREATE FOREIGN DATA WRAPPER foobar;                             -- ERROR
psql:sql/foreign_data.sql:507: ERROR:  permission denied to create foreign-data wrapper "foobar"
HINT:  Must be superuser to create a foreign-data wrapper.
ALTER FOREIGN DATA WRAPPER foo OPTIONS (gotcha 'true');         -- ERROR
psql:sql/foreign_data.sql:508: ERROR:  permission denied to alter foreign-data wrapper "foo"
HINT:  Must be superuser to alter a foreign-data wrapper.
DROP FOREIGN DATA WRAPPER foo;                                  -- ERROR
psql:sql/foreign_data.sql:509: ERROR:  must be owner of foreign-data wrapper foo
GRANT USAGE ON FOREIGN DATA WRAPPER postgresql TO regress_test_role; -- WARNING
psql:sql/foreign_data.sql:510: WARNING:  no privileges were granted for "postgresql"
GRANT
GRANT USAGE ON FOREIGN DATA WRAPPER foo TO regress_test_role;
GRANT
CREATE SERVER s9 FOREIGN DATA WRAPPER postgresql;
CREATE SERVER
ALTER SERVER s6 VERSION '0.5';                                  -- ERROR
psql:sql/foreign_data.sql:513: ERROR:  must be owner of foreign server s6
DROP SERVER s6;                                                 -- ERROR
psql:sql/foreign_data.sql:514: ERROR:  must be owner of foreign server s6
--DDL_STAx                                                                        TEMENT_BEGIN--
GRANT USAGE ON FOREIGN SERVER s6 TO regress_test_role;          -- ERROR
psql:sql/foreign_data.sql:516: ERROR:  permission denied for foreign server s6
GRANT USAGE ON FOREIGN SERVER s9 TO regress_test_role;
GRANT
CREATE USER MAPPING FOR public SERVER s6;                       -- ERROR
psql:sql/foreign_data.sql:518: ERROR:  must be owner of foreign server s6
CREATE USER MAPPING FOR public SERVER s9;
CREATE USER MAPPING
ALTER USER MAPPING FOR regress_test_role SERVER s6 OPTIONS (gotcha 'true'); -- ERROR
psql:sql/foreign_data.sql:520: ERROR:  must be owner of foreign server s6
DROP USER MAPPING FOR regress_test_role SERVER s6;              -- ERROR
psql:sql/foreign_data.sql:521: ERROR:  must be owner of foreign server s6
RESET ROLE;
RESET
REVOKE USAGE ON FOREIGN DATA WRAPPER foo FROM regress_unprivileged_role; -- ERROR
psql:sql/foreign_data.sql:524: ERROR:  dependent privileges exist
HINT:  Use CASCADE to revoke them too.
REVOKE USAGE ON FOREIGN DATA WRAPPER foo FROM regress_unprivileged_role CASCADE;
REVOKE
SET ROLE regress_unprivileged_role;
SET
GRANT USAGE ON FOREIGN DATA WRAPPER foo TO regress_test_role;   -- ERROR
psql:sql/foreign_data.sql:527: ERROR:  permission denied for foreign-data wrapper foo
CREATE SERVER s10 FOREIGN DATA WRAPPER foo;                     -- ERROR
psql:sql/foreign_data.sql:528: ERROR:  permission denied for foreign-data wrapper foo
ALTER SERVER s9 VERSION '1.1';
ALTER SERVER
GRANT USAGE ON FOREIGN SERVER s9 TO regress_test_role;
GRANT
CREATE USER MAPPING FOR current_user SERVER s9;
CREATE USER MAPPING
-- We use terse mode to avoid ordering issues in cascade detail output.
\set VERBOSITY terse
DROP SERVER s9 CASCADE;
psql:sql/foreign_data.sql:534: NOTICE:  drop cascades to 2 other objects
DROP SERVER
\set VERBOSITY default
RESET ROLE;
RESET
CREATE SERVER s9 FOREIGN DATA WRAPPER foo;
CREATE SERVER
GRANT USAGE ON FOREIGN SERVER s9 TO regress_unprivileged_role;
GRANT
SET ROLE regress_unprivileged_role;
SET
ALTER SERVER s9 VERSION '1.2';                                  -- ERROR
psql:sql/foreign_data.sql:540: ERROR:  must be owner of foreign server s9
GRANT USAGE ON FOREIGN SERVER s9 TO regress_test_role;          -- WARNING
psql:sql/foreign_data.sql:541: WARNING:  no privileges were granted for "s9"
GRANT
CREATE USER MAPPING FOR current_user SERVER s9;
CREATE USER MAPPING
DROP SERVER s9 CASCADE;                                         -- ERROR
psql:sql/foreign_data.sql:543: ERROR:  must be owner of foreign server s9
-- Check visibility of user mapping data
SET ROLE regress_test_role;
SET
CREATE SERVER s10 FOREIGN DATA WRAPPER foo;
CREATE SERVER
CREATE USER MAPPING FOR public SERVER s10 OPTIONS (user 'secret');
CREATE USER MAPPING
CREATE USER MAPPING FOR regress_unprivileged_role SERVER s10 OPTIONS (user 'secret');
CREATE USER MAPPING
-- owner of server can see some option fields
\deu+
                  List of user mappings
 Server  |         User name         |    FDW options    
---------+---------------------------+-------------------
 integer | regress_addr_user         | 
 s10     | public                    | ("user" 'secret')
 s10     | regress_unprivileged_role | 
 s4      | regress_foreign_data_user | 
 s5      | regress_test_role         | (modified '1')
 s6      | regress_test_role         | 
 s8      | public                    | 
 s8      | regress_foreign_data_user | 
 s9      | regress_unprivileged_role | 
 t1      | public                    | (modified '1')
(10 rows)

RESET ROLE;
RESET
-- superuser can see all option fields
\deu+
                   List of user mappings
 Server  |         User name         |     FDW options     
---------+---------------------------+---------------------
 integer | regress_addr_user         | 
 s10     | public                    | ("user" 'secret')
 s10     | regress_unprivileged_role | ("user" 'secret')
 s4      | regress_foreign_data_user | 
 s5      | regress_test_role         | (modified '1')
 s6      | regress_test_role         | 
 s8      | public                    | 
 s8      | regress_foreign_data_user | (password 'public')
 s9      | regress_unprivileged_role | 
 t1      | public                    | (modified '1')
(10 rows)

-- unprivileged user cannot see any option field
SET ROLE regress_unprivileged_role;
SET
\deu+
               List of user mappings
 Server  |         User name         | FDW options 
---------+---------------------------+-------------
 integer | regress_addr_user         | 
 s10     | public                    | 
 s10     | regress_unprivileged_role | 
 s4      | regress_foreign_data_user | 
 s5      | regress_test_role         | 
 s6      | regress_test_role         | 
 s8      | public                    | 
 s8      | regress_foreign_data_user | 
 s9      | regress_unprivileged_role | 
 t1      | public                    | 
(10 rows)

RESET ROLE;
RESET
\set VERBOSITY terse
DROP SERVER s10 CASCADE;
psql:sql/foreign_data.sql:560: NOTICE:  drop cascades to 2 other objects
DROP SERVER
\set VERBOSITY default
-- Table inheritance
CREATE TABLE fd_pt1 (
	c1 integer NOT NULL,
	c2 text,
	c3 date
);
CREATE TABLE
CREATE FOREIGN TABLE ft2 (
	c1 integer NOT NULL,
	c2 text,
	c3 date
) SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value');
CREATE FOREIGN TABLE
-- add attributes recursively
ALTER TABLE fd_pt1 ADD COLUMN c4 integer;
ALTER TABLE
ALTER TABLE fd_pt1 ADD COLUMN c5 integer DEFAULT 0;
ALTER TABLE
ALTER TABLE fd_pt1 ADD COLUMN c6 integer;
ALTER TABLE
ALTER TABLE fd_pt1 ADD COLUMN c7 integer NOT NULL;
ALTER TABLE
ALTER TABLE fd_pt1 ADD COLUMN c8 integer;
ALTER TABLE
\d+ fd_pt1
                                   Table "public.fd_pt1"
 Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+---------+-----------+----------+---------+----------+--------------+-------------
 c1     | integer |           | not null |         | plain    |              | 
 c2     | text    |           |          |         | extended |              | 
 c3     | date    |           |          |         | plain    |              | 
 c4     | integer |           |          |         | plain    |              | 
 c5     | integer |           |          | 0       | plain    |              | 
 c6     | integer |           |          |         | plain    |              | 
 c7     | integer |           | not null |         | plain    |              | 
 c8     | integer |           |          |         | plain    |              | 
Options: shard=1

\d+ ft2
                                       Foreign table "public.ft2"
 Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
--------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
 c1     | integer |           | not null |         |             | plain    |              | 
 c2     | text    |           |          |         |             | extended |              | 
 c3     | date    |           |          |         |             | plain    |              | 
Server: s0
FDW options: (delimiter ',', quote '"', "be quoted" 'value')

\d+ ct3
psql:sql/foreign_data.sql:584: error: Did not find any relation named "ct3".
\d+ ft3
psql:sql/foreign_data.sql:585: error: Did not find any relation named "ft3".
-- alter attributes recursively
ALTER TABLE fd_pt1 ALTER COLUMN c4 SET DEFAULT 0;
ALTER TABLE
ALTER TABLE fd_pt1 ALTER COLUMN c5 DROP DEFAULT;
ALTER TABLE
ALTER TABLE fd_pt1 ALTER COLUMN c6 SET NOT NULL;
ALTER TABLE
ALTER TABLE fd_pt1 ALTER COLUMN c7 DROP NOT NULL;
ALTER TABLE
ALTER TABLE fd_pt1 ALTER COLUMN c8 TYPE char(10) USING '0';
psql:sql/foreign_data.sql:592: ERROR:  Can not alter column type using non-TypeCast expression
ALTER TABLE fd_pt1 ALTER COLUMN c8 TYPE char(10);
ALTER TABLE
ALTER TABLE fd_pt1 ALTER COLUMN c8 SET DATA TYPE text;
ALTER TABLE
ALTER TABLE fd_pt1 ALTER COLUMN c1 SET (n_distinct = 100);
ALTER TABLE
\d+ fd_pt1
                                   Table "public.fd_pt1"
 Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+---------+-----------+----------+---------+----------+--------------+-------------
 c1     | integer |           | not null |         | plain    |              | 
 c2     | text    |           |          |         | extended |              | 
 c3     | date    |           |          |         | plain    |              | 
 c4     | integer |           |          | 0       | plain    |              | 
 c5     | integer |           |          |         | plain    |              | 
 c6     | integer |           | not null |         | plain    |              | 
 c7     | integer |           |          |         | plain    |              | 
 c8     | text    |           |          |         | extended |              | 
Options: shard=1

\d+ ft2
                                       Foreign table "public.ft2"
 Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
--------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
 c1     | integer |           | not null |         |             | plain    |              | 
 c2     | text    |           |          |         |             | extended |              | 
 c3     | date    |           |          |         |             | plain    |              | 
Server: s0
FDW options: (delimiter ',', quote '"', "be quoted" 'value')

-- drop attributes recursively
ALTER TABLE fd_pt1 DROP COLUMN c4;
ALTER TABLE
ALTER TABLE fd_pt1 DROP COLUMN c5;
ALTER TABLE
ALTER TABLE fd_pt1 DROP COLUMN c6;
ALTER TABLE
ALTER TABLE fd_pt1 DROP COLUMN c7;
ALTER TABLE
ALTER TABLE fd_pt1 DROP COLUMN c8;
ALTER TABLE
\d+ fd_pt1
                                   Table "public.fd_pt1"
 Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+---------+-----------+----------+---------+----------+--------------+-------------
 c1     | integer |           | not null |         | plain    |              | 
 c2     | text    |           |          |         | extended |              | 
 c3     | date    |           |          |         | plain    |              | 
Options: shard=1

\d+ ft2
                                       Foreign table "public.ft2"
 Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
--------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
 c1     | integer |           | not null |         |             | plain    |              | 
 c2     | text    |           |          |         |             | extended |              | 
 c3     | date    |           |          |         |             | plain    |              | 
Server: s0
FDW options: (delimiter ',', quote '"', "be quoted" 'value')

-- add constraints recursively
SELECT relname, conname, contype, conislocal, coninhcount, connoinherit
  FROM pg_class AS pc JOIN pg_constraint AS pgc ON (conrelid = pc.oid)
  WHERE pc.relname = 'fd_pt1'
  ORDER BY 1,2;
 relname | conname | contype | conislocal | coninhcount | connoinherit 
---------+---------+---------+------------+-------------+--------------
(0 rows)

\d+ fd_pt1
                                   Table "public.fd_pt1"
 Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+---------+-----------+----------+---------+----------+--------------+-------------
 c1     | integer |           | not null |         | plain    |              | 
 c2     | text    |           |          |         | extended |              | 
 c3     | date    |           |          |         | plain    |              | 
Options: shard=1

\d+ ft2
                                       Foreign table "public.ft2"
 Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
--------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
 c1     | integer |           | not null |         |             | plain    |              | 
 c2     | text    |           |          |         |             | extended |              | 
 c3     | date    |           |          |         |             | plain    |              | 
Server: s0
FDW options: (delimiter ',', quote '"', "be quoted" 'value')

\set VERBOSITY terse
DROP FOREIGN TABLE ft2;
DROP FOREIGN TABLE
\set VERBOSITY default
CREATE FOREIGN TABLE ft2 (
	c1 integer NOT NULL,
	c2 text,
	c3 date
) SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value');
CREATE FOREIGN TABLE
\d+ fd_pt1
                                   Table "public.fd_pt1"
 Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+---------+-----------+----------+---------+----------+--------------+-------------
 c1     | integer |           | not null |         | plain    |              | 
 c2     | text    |           |          |         | extended |              | 
 c3     | date    |           |          |         | plain    |              | 
Options: shard=1

\d+ ft2
                                       Foreign table "public.ft2"
 Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
--------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
 c1     | integer |           | not null |         |             | plain    |              | 
 c2     | text    |           |          |         |             | extended |              | 
 c3     | date    |           |          |         |             | plain    |              | 
Server: s0
FDW options: (delimiter ',', quote '"', "be quoted" 'value')

-- NOT VALID case
INSERT INTO fd_pt1 VALUES (1, 'fd_pt1'::text, '1994-01-01'::date);
INSERT 0 1
\d+ fd_pt1
                                   Table "public.fd_pt1"
 Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+---------+-----------+----------+---------+----------+--------------+-------------
 c1     | integer |           | not null |         | plain    |              | 
 c2     | text    |           |          |         | extended |              | 
 c3     | date    |           |          |         | plain    |              | 
Options: shard=1

\d+ ft2
                                       Foreign table "public.ft2"
 Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
--------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
 c1     | integer |           | not null |         |             | plain    |              | 
 c2     | text    |           |          |         |             | extended |              | 
 c3     | date    |           |          |         |             | plain    |              | 
Server: s0
FDW options: (delimiter ',', quote '"', "be quoted" 'value')

-- changes name of an attribute recursively
ALTER TABLE fd_pt1 RENAME COLUMN c1 TO f1;
ALTER TABLE
ALTER TABLE fd_pt1 RENAME COLUMN c2 TO f2;
ALTER TABLE
ALTER TABLE fd_pt1 RENAME COLUMN c3 TO f3;
ALTER TABLE
-- changes name of a constraint recursively
\d+ fd_pt1
                                   Table "public.fd_pt1"
 Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+---------+-----------+----------+---------+----------+--------------+-------------
 f1     | integer |           | not null |         | plain    |              | 
 f2     | text    |           |          |         | extended |              | 
 f3     | date    |           |          |         | plain    |              | 
Options: shard=1

\d+ ft2
                                       Foreign table "public.ft2"
 Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
--------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
 c1     | integer |           | not null |         |             | plain    |              | 
 c2     | text    |           |          |         |             | extended |              | 
 c3     | date    |           |          |         |             | plain    |              | 
Server: s0
FDW options: (delimiter ',', quote '"', "be quoted" 'value')

DROP TABLE fd_pt1 CASCADE;
DROP TABLE
-- IMPORT FOREIGN SCHEMA
IMPORT FOREIGN SCHEMA s1 FROM SERVER s9 INTO public; -- ERROR
psql:sql/foreign_data.sql:643: ERROR:  foreign-data wrapper "foo" has no handler
IMPORT FOREIGN SCHEMA s1 LIMIT TO (t1) FROM SERVER s9 INTO public; --ERROR
psql:sql/foreign_data.sql:644: ERROR:  foreign-data wrapper "foo" has no handler
IMPORT FOREIGN SCHEMA s1 EXCEPT (t1) FROM SERVER s9 INTO public; -- ERROR
psql:sql/foreign_data.sql:645: ERROR:  foreign-data wrapper "foo" has no handler
IMPORT FOREIGN SCHEMA s1 EXCEPT (t1, t2) FROM SERVER s9 INTO public
OPTIONS (option1 'value1', option2 'value2'); -- ERROR
psql:sql/foreign_data.sql:647: ERROR:  foreign-data wrapper "foo" has no handler
-- DROP FOREIGN TABLE@
DROP FOREIGN TABLE no_table;                                    -- ERROR
psql:sql/foreign_data.sql:650: ERROR:  foreign table "no_table" does not exist
DROP FOREIGN TABLE IF EXISTS no_table;
psql:sql/foreign_data.sql:652: NOTICE:  foreign table "no_table" does not exist, skipping
DROP FOREIGN TABLE
-- REASSIGN OWNED/DROP OWNED of foreign objects
REASSIGN OWNED BY regress_test_role TO regress_test_role2;
REASSIGN OWNED
-- Foreign partition DDL stuff
CREATE TABLE fd_pt2 (
	c1 integer NOT NULL,
	c2 text,
	c3 date
) PARTITION BY LIST (c1);
CREATE TABLE
CREATE FOREIGN TABLE fd_pt2_1 PARTITION OF fd_pt2 FOR VALUES IN (1)
  SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value');
CREATE FOREIGN TABLE
\d+ fd_pt2
                             Partitioned table "public.fd_pt2"
 Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+---------+-----------+----------+---------+----------+--------------+-------------
 c1     | integer |           | not null |         | plain    |              | 
 c2     | text    |           |          |         | extended |              | 
 c3     | date    |           |          |         | plain    |              | 
Partition key: LIST (c1)
Partitions: fd_pt2_1 FOR VALUES IN (1)

\d+ fd_pt2_1
                                     Foreign table "public.fd_pt2_1"
 Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
--------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
 c1     | integer |           | not null |         |             | plain    |              | 
 c2     | text    |           |          |         |             | extended |              | 
 c3     | date    |           |          |         |             | plain    |              | 
Partition of: fd_pt2 FOR VALUES IN (1)
Partition constraint: ((c1 IS NOT NULL) AND (c1 = 1))
Server: s0
FDW options: (delimiter ',', quote '"', "be quoted" 'value')

-- cannot add column to a partition
ALTER TABLE fd_pt2_1 ADD c4 char;
psql:sql/foreign_data.sql:668: ERROR:  cannot add column to a partition
-- ok to have a partition's own constraints though
ALTER TABLE fd_pt2_1 ALTER c3 SET NOT NULL;
ALTER TABLE
\d+ fd_pt2
                             Partitioned table "public.fd_pt2"
 Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+---------+-----------+----------+---------+----------+--------------+-------------
 c1     | integer |           | not null |         | plain    |              | 
 c2     | text    |           |          |         | extended |              | 
 c3     | date    |           |          |         | plain    |              | 
Partition key: LIST (c1)
Partitions: fd_pt2_1 FOR VALUES IN (1)

\d+ fd_pt2_1
                                     Foreign table "public.fd_pt2_1"
 Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
--------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
 c1     | integer |           | not null |         |             | plain    |              | 
 c2     | text    |           |          |         |             | extended |              | 
 c3     | date    |           | not null |         |             | plain    |              | 
Partition of: fd_pt2 FOR VALUES IN (1)
Partition constraint: ((c1 IS NOT NULL) AND (c1 = 1))
Server: s0
FDW options: (delimiter ',', quote '"', "be quoted" 'value')

-- cannot drop inherited NOT NULL constraint from a partition
ALTER TABLE fd_pt2_1 ALTER c1 DROP NOT NULL;
psql:sql/foreign_data.sql:675: ERROR:  column "c1" is marked NOT NULL in parent table
-- partition must have parent's constraints
ALTER TABLE fd_pt2 ALTER c2 SET NOT NULL;
ALTER TABLE
\d+ fd_pt2
                             Partitioned table "public.fd_pt2"
 Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+---------+-----------+----------+---------+----------+--------------+-------------
 c1     | integer |           | not null |         | plain    |              | 
 c2     | text    |           | not null |         | extended |              | 
 c3     | date    |           |          |         | plain    |              | 
Partition key: LIST (c1)
Partitions: fd_pt2_1 FOR VALUES IN (1)

\d+ fd_pt2_1
                                     Foreign table "public.fd_pt2_1"
 Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
--------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
 c1     | integer |           | not null |         |             | plain    |              | 
 c2     | text    |           | not null |         |             | extended |              | 
 c3     | date    |           | not null |         |             | plain    |              | 
Partition of: fd_pt2 FOR VALUES IN (1)
Partition constraint: ((c1 IS NOT NULL) AND (c1 = 1))
Server: s0
FDW options: (delimiter ',', quote '"', "be quoted" 'value')

DROP FOREIGN TABLE fd_pt2_1;
DROP FOREIGN TABLE
DROP TABLE fd_pt2;
DROP TABLE
-- Cleanup
DROP SCHEMA foreign_schema CASCADE;
psql:sql/foreign_data.sql:686: NOTICE:  drop cascades to foreign table foreign_schema.foreign_table_1
DROP SCHEMA
DROP ROLE regress_test_role;                                -- ERROR
psql:sql/foreign_data.sql:687: ERROR:  role "regress_test_role" cannot be dropped because some objects depend on it
DETAIL:  privileges for server s4
privileges for foreign-data wrapper foo
owner of user mapping for regress_test_role on server s6
owner of user mapping for regress_test_role on server s5
DROP SERVER t1 CASCADE;
psql:sql/foreign_data.sql:688: NOTICE:  drop cascades to user mapping for public on server t1
DROP SERVER
DROP USER MAPPING FOR regress_test_role SERVER s6;
DROP USER MAPPING
\set VERBOSITY terse
DROP FOREIGN DATA WRAPPER foo CASCADE;
psql:sql/foreign_data.sql:691: NOTICE:  drop cascades to 8 other objects
DROP FOREIGN DATA WRAPPER
DROP SERVER s8 CASCADE;
psql:sql/foreign_data.sql:692: NOTICE:  drop cascades to 2 other objects
DROP SERVER
\set VERBOSITY default
DROP ROLE regress_test_indirect;
DROP ROLE
DROP ROLE regress_test_role;
DROP ROLE
DROP ROLE regress_unprivileged_role;                        -- ERROR
psql:sql/foreign_data.sql:696: ERROR:  role "regress_unprivileged_role" cannot be dropped because some objects depend on it
DETAIL:  privileges for foreign-data wrapper postgresql
REVOKE ALL ON FOREIGN DATA WRAPPER postgresql FROM regress_unprivileged_role;
REVOKE
DROP ROLE regress_unprivileged_role;
DROP ROLE
DROP ROLE regress_test_role2;
DROP ROLE
DROP FOREIGN DATA WRAPPER postgresql CASCADE;
DROP FOREIGN DATA WRAPPER
DROP FOREIGN DATA WRAPPER dummy CASCADE;
psql:sql/foreign_data.sql:701: NOTICE:  drop cascades to 2 other objects
DETAIL:  drop cascades to server s0
drop cascades to foreign table ft2
DROP FOREIGN DATA WRAPPER
\c
You are now connected to database "regress" as user "abc".
DROP ROLE regress_foreign_data_user;
DROP ROLE
-- At this point we should have no wrappers, no servers, and no mappings.
SELECT fdwname, fdwhandler, fdwvalidator, fdwoptions FROM pg_foreign_data_wrapper;
 fdwname  | fdwhandler | fdwvalidator | fdwoptions 
----------+------------+--------------+------------
 addr_fdw |          0 |            0 | 
(1 row)

SELECT srvname, srvoptions FROM pg_foreign_server;\
  srvname   | srvoptions 
------------+------------
 addr_fserv | 
 integer    | 
(2 rows)

psql:sql/foreign_data.sql:707: error: invalid command \
--Its value changes frequently and is temporarily cancelled
--SELECT * FROM pg_user_mapping;
