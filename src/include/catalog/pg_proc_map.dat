# -------------------------------------------------------------------------
#  Copyright (c) 2019-2021 ZettaDB inc. All rights reserved.
# 
#  This source code is licensed under Apache 2.0 License,
#  combined with Common Clause Condition 1.0, as detailed in the NOTICE file.
# -------------------------------------------------------------------------

[
{proname => 'abs', proargtypes => 'float4', mysql => 'abs($1)'},
{proname => 'abs', proargtypes => 'float8', mysql => 'abs($1)'},
{proname => 'abs', proargtypes => 'int2', mysql => 'abs($1)'},
{proname => 'abs', proargtypes => 'int4', mysql => 'abs($1)'},
{proname => 'abs', proargtypes => 'int8', mysql => 'abs($1)'},
{proname => 'abs', proargtypes => 'numeric', mysql => 'abs($1)'},
{proname => 'acos', proargtypes => 'float8', mysql => 'acos($1)'},
{proname => 'ascii', proargtypes => 'text', mysql => 'ascii($1)'},
{proname => 'asin', proargtypes => 'float8', mysql => 'asin($1)'},
{proname => 'atan2', proargtypes => 'float8 float8', mysql => 'atan2($1, $2)'},
{proname => 'atan', proargtypes => 'float8', mysql => 'atan($1)'},
{proname => 'avg', proargtypes => 'float4', mysql => 'avg($1)'},
{proname => 'avg', proargtypes => 'float8', mysql => 'avg($1)'},
{proname => 'avg', proargtypes => 'int2', mysql => 'avg($1)'},
{proname => 'avg', proargtypes => 'int4', mysql => 'avg($1)'},
{proname => 'avg', proargtypes => 'int8', mysql => 'avg($1)'},
{proname => 'avg', proargtypes => 'numeric', mysql => 'avg($1)'},
{proname => 'bitand', proargtypes => 'bit bit', mysql => '($1 & $2)'},
{proname => 'bit_and', proargtypes => 'bit', mysql => 'bit_and($1)'},
{proname => 'bit_and', proargtypes => 'int2', mysql => 'bit_and($1)'},
{proname => 'bit_and', proargtypes => 'int4', mysql => 'bit_and($1)'},
{proname => 'bit_and', proargtypes => 'int8', mysql => 'bit_and($1)'},
{proname => 'biteq', proargtypes => 'bit bit', mysql => '($1 = $2)'},
{proname => 'bitge', proargtypes => 'bit bit', mysql => '($1 >= $2)'},
{proname => 'bitgt', proargtypes => 'bit bit', mysql => '($1 > $2)'},
{proname => 'bitle', proargtypes => 'bit bit', mysql => '($1 <= $2)'},
{proname => 'bitlt', proargtypes => 'bit bit', mysql => '($1 < $2)'},
{proname => 'bitne', proargtypes => 'bit bit', mysql => '($1 <> $2)'},
{proname => 'bitnot', proargtypes => 'bit', enable => 'f', mysql => '(~$1)'},
{proname => 'bitor', proargtypes => 'bit bit', mysql => '($1 | $2)'},
{proname => 'bit_or', proargtypes => 'bit', mysql => 'bit_or($1)'},
{proname => 'bit_or', proargtypes => 'int2', mysql => 'bit_or($1)'},
{proname => 'bit_or', proargtypes => 'int4', mysql => 'bit_or($1)'},
{proname => 'bit_or', proargtypes => 'int8', mysql => 'bit_or($1)'},
{proname => 'bitshiftleft', proargtypes => 'bit int4', enable => 'f', mysql => '($1 << $2)'},
{proname => 'bitshiftright', proargtypes => 'bit int4', enable => 'f', mysql => '($1 >> $2)'},
{proname => 'bitxor', proargtypes => 'bit bit', mysql => '($1 ^ $2)'},
{proname => 'bool', proargtypes => 'int4', mysql => '($1 != 0)'},
{proname => 'booleq', proargtypes => 'bool bool', mysql => '($1 = $2)'},
{proname => 'boolge', proargtypes => 'bool bool', mysql => '($1 >= $2)'},
{proname => 'boolgt', proargtypes => 'bool bool', mysql => '($1 > $2)'},
{proname => 'boolle', proargtypes => 'bool bool', mysql => '($1 <= $2)'},
{proname => 'boollt', proargtypes => 'bool bool', mysql => '($1 < $2)'},
{proname => 'boolne', proargtypes => 'bool bool', mysql => '($1 <> $2)'},
{proname => 'bpchareq', proargtypes => 'bpchar bpchar', mysql => '($1 = $2)'},
{proname => 'bpcharge', proargtypes => 'bpchar bpchar', mysql => '($1 >= $2)'},
{proname => 'bpchargt', proargtypes => 'bpchar bpchar', mysql => '($1 > $2)'},
{proname => 'bpcharicregexeq', proargtypes => 'bpchar text', mysql => 'regexp_like($1, $2, "i")'},
{proname => 'bpcharicregexne', proargtypes => 'bpchar text', mysql => '!regexp_like($1, $2, "i")'},
{proname => 'bpcharle', proargtypes => 'bpchar bpchar', mysql => '($1 <= $2)'},
{proname => 'bpcharlike', proargtypes => 'bpchar text', mysql => '($1 like $2)'},
{proname => 'bpcharlt', proargtypes => 'bpchar bpchar', mysql => '($1 < $2)'},
{proname => 'bpcharne', proargtypes => 'bpchar bpchar', mysql => '($1 <> $2)'},
{proname => 'bpcharnlike', proargtypes => 'bpchar text', mysql => '($1 not like $2)'},
{proname => 'bpchar', proargtypes => 'char', mysql => '$1'},
{proname => 'bpchar', proargtypes => 'name', mysql => 'cast($1 as char(64))'},
{proname => 'bpcharregexeq', proargtypes => 'bpchar text', mysql => 'regexp_like($1, $2, "c")'},
{proname => 'bpcharregexne', proargtypes => 'bpchar text', mysql => '!regexp_like($1, $2, "c")'},
{proname => 'byteacat', proargtypes => 'bytea bytea', mysql => 'concat($1, $2)'},
{proname => 'byteaeq', proargtypes => 'bytea bytea', mysql => '($1 = $2)'},
{proname => 'byteage', proargtypes => 'bytea bytea', mysql => '($1 >= $2)'},
{proname => 'byteagt', proargtypes => 'bytea bytea', mysql => '($1 > $2)'},
{proname => 'byteale', proargtypes => 'bytea bytea', mysql => '($1 <= $2)'},
{proname => 'bytealike', proargtypes => 'bytea bytea', mysql => '($1 like $2)'},
{proname => 'bytealt', proargtypes => 'bytea bytea', mysql => '($1 < $2)'},
{proname => 'byteane', proargtypes => 'bytea bytea', mysql => '($1 <> $2)'},
{proname => 'byteanlike', proargtypes => 'bytea bytea', mysql => '($1 not like $2)'},
{proname => 'cash_div_cash', proargtypes => 'money money', mysql => '($1 / $2)'},
{proname => 'cash_div_flt4', proargtypes => 'money float4', mysql => '($1 / $2)'},
{proname => 'cash_div_flt8', proargtypes => 'money float8', mysql => '($1 / $2)'},
{proname => 'cash_div_int2', proargtypes => 'money int2', mysql => '($1 / $2)'},
{proname => 'cash_div_int4', proargtypes => 'money int4', mysql => '($1 / $2)'},
{proname => 'cash_div_int8', proargtypes => 'money int8', mysql => '($1 / $2)'},
{proname => 'cash_eq', proargtypes => 'money money', mysql => '($1 = $2)'},
{proname => 'cash_ge', proargtypes => 'money money', mysql => '($1 >= $2)'},
{proname => 'cash_gt', proargtypes => 'money money', mysql => '($1 > $2)'},
{proname => 'cash_le', proargtypes => 'money money', mysql => '($1 <= $2)'},
{proname => 'cash_lt', proargtypes => 'money money', mysql => '($1 < $2)'},
{proname => 'cash_mi', proargtypes => 'money money', mysql => '($1 - $2)'},
{proname => 'cash_mul_flt4', proargtypes => 'money float4', mysql => '($1 * $2)'},
{proname => 'cash_mul_flt8', proargtypes => 'money float8', mysql => '($1 * $2)'},
{proname => 'cash_mul_int2', proargtypes => 'money int2', mysql => '($1 * $2)'},
{proname => 'cash_mul_int4', proargtypes => 'money int4', mysql => '($1 * $2)'},
{proname => 'cash_mul_int8', proargtypes => 'money int8', mysql => '($1 * $2)'},
{proname => 'cash_ne', proargtypes => 'money money', mysql => '($1 <> $2)'},
{proname => 'cash_pl', proargtypes => 'money money', mysql => '($1 + $2)'},
{proname => 'ceiling', proargtypes => 'float8', mysql => 'ceil($1)'},
{proname => 'ceiling', proargtypes => 'numeric', mysql => 'ceiling($1)'},
{proname => 'ceil', proargtypes => 'float8', mysql => 'ceil($1)'},
{proname => 'ceil', proargtypes => 'numeric', mysql => 'ceil($1)'},
{proname => 'chareq', proargtypes => 'char char', mysql => '($1 = $2)'},
{proname => 'charge', proargtypes => 'char char', mysql => '($1 >= $2)'},
{proname => 'chargt', proargtypes => 'char char', mysql => '($1 > $2)'},
{proname => 'char_length', proargtypes => 'bpchar', mysql => 'char_length($1)'},
{proname => 'char_length', proargtypes => 'text', mysql => 'char_length($1)'},
{proname => 'charle', proargtypes => 'char char', mysql => '($1 <= $2)'},
{proname => 'charlt', proargtypes => 'char char', mysql => '($1 < $2)'},
{proname => 'charne', proargtypes => 'char char', mysql => '($1 <> $2)'},
{proname => 'char', proargtypes => 'int4', mysql => 'cast(char($1) as char)'},
{proname => 'char', proargtypes => 'text', mysql => 'cast($1 as char(1))'},
{proname => 'cideq', proargtypes => 'cid cid', mysql => '($1 = $2)'},
{proname => 'cos', proargtypes => 'float8', mysql => 'cos($1)'},
{proname => 'cot', proargtypes => 'float8', mysql => 'cot($1)'},
{proname => 'count', proargtypes => 'any', mysql => 'count(1)'},
{proname => 'count', proargtypes => '', mysql => 'count($1)'},
{proname => 'date_eq', proargtypes => 'date date', mysql => '($1 = $2)'},
{proname => 'date_eq_timestamp', proargtypes => 'date timestamp', mysql => '($1 = $2)'},
{proname => 'date_eq_timestamptz', proargtypes => 'date timestamptz', mysql => '($1 = $2)'},
{proname => 'date_ge', proargtypes => 'date date', mysql => '($1 >= $2)'},
{proname => 'date_ge_timestamp', proargtypes => 'date timestamp', mysql => '($1 >= $2)'},
{proname => 'date_ge_timestamptz', proargtypes => 'date timestamptz', mysql => '($1 >= $2)'},
{proname => 'date_gt', proargtypes => 'date date', mysql => '($1 > $2)'},
{proname => 'date_gt_timestamp', proargtypes => 'date timestamp', mysql => '($1 > $2)'},
{proname => 'date_gt_timestamptz', proargtypes => 'date timestamptz', mysql => '($1 > $2)'},
{proname => 'date_le', proargtypes => 'date date', mysql => '($1 <= $2)'},
{proname => 'date_le_timestamp', proargtypes => 'date timestamp', mysql => '($1 <= $2)'},
{proname => 'date_le_timestamptz', proargtypes => 'date timestamptz', mysql => '($1 <= $2)'},
{proname => 'date_lt', proargtypes => 'date date', mysql => '($1 < $2)'},
{proname => 'date_lt_timestamp', proargtypes => 'date timestamp', mysql => '($1 < $2)'},
{proname => 'date_lt_timestamptz', proargtypes => 'date timestamptz', mysql => '($1 < $2)'},
{proname => 'date_mi_interval', proargtypes => 'date interval', mysql => 'date_sub($1, $2)'},
{proname => 'date_mii', proargtypes => 'date int4', mysql => 'date_sub($1, interval $2 day)'},
{proname => 'date_mi', proargtypes => 'date date', mysql => 'datediff($1, $2)'},
{proname => 'date_ne', proargtypes => 'date date', mysql => '($1 <> $2)'},
{proname => 'date_ne_timestamp', proargtypes => 'date timestamp', mysql => '($1 <> $2)'},
{proname => 'date_ne_timestamptz', proargtypes => 'date timestamptz', mysql => '($1 <> $2)'},
{proname => 'date_pl_interval', proargtypes => 'date interval', mysql => 'date_add($1, $2)'},
{proname => 'date_pli', proargtypes => 'date int4', mysql => 'date_add($1, interval $2 day)'},
{proname => 'date', proargtypes => 'timestamp', mysql => 'date($1)'},
{proname => 'date', proargtypes => 'timestamptz', mysql => 'date($1)'},
{proname => 'datetime_pl', proargtypes => 'date time', mysql => 'addtime($1, $2)'},
{proname => 'datetimetz_pl', proargtypes => 'date timetz', mysql => 'addtime($1, $2)'},
{proname => 'degrees', proargtypes => 'float8', mysql => 'degrees($1)'},
{proname => 'div', proargtypes => 'numeric numeric', mysql => 'div($1,$2)'},
{proname => 'dpow', proargtypes => 'float8 float8', mysql => 'pow($1, $2)'},
{proname => 'dsqrt', proargtypes => 'float8', mysql => 'sqrt($1)'},
{proname => 'exp', proargtypes => 'float8', mysql => 'exp($1)'},
{proname => 'exp', proargtypes => 'numeric', mysql => 'exp($1)'},
{proname => 'enum_eq', proargtypes => 'anyenum anyenum', mysql => '($1 = $2)' },
{proname => 'float48div', proargtypes => 'float4 float8', mysql => '($1 / $2)'},
{proname => 'float48eq', proargtypes => 'float4 float8', mysql => '($1 = $2)'},
{proname => 'float48ge', proargtypes => 'float4 float8', mysql => '($1 >= $2)'},
{proname => 'float48gt', proargtypes => 'float4 float8', mysql => '($1 > $2)'},
{proname => 'float48le', proargtypes => 'float4 float8', mysql => '($1 <= $2)'},
{proname => 'float48lt', proargtypes => 'float4 float8', mysql => '($1 < $2)'},
{proname => 'float48mi', proargtypes => 'float4 float8', mysql => '($1 - $2)'},
{proname => 'float48mul', proargtypes => 'float4 float8', mysql => '($1 * $2)'},
{proname => 'float48ne', proargtypes => 'float4 float8', mysql => '($1 <> $2)'},
{proname => 'float48pl', proargtypes => 'float4 float8', mysql => '($1 + $2)'},
{proname => 'float4abs', proargtypes => 'float4', mysql => 'abs($1)'},
{proname => 'float4div', proargtypes => 'float4 float4', mysql => '($1 / $2)'},
{proname => 'float4eq', proargtypes => 'float4 float4', mysql => '($1 = $2)'},
{proname => 'float4ge', proargtypes => 'float4 float4', mysql => '($1 >= $2)'},
{proname => 'float4gt', proargtypes => 'float4 float4', mysql => '($1 > $2)'},
{proname => 'float4le', proargtypes => 'float4 float4', mysql => '($1 <= $2)'},
{proname => 'float4lt', proargtypes => 'float4 float4', mysql => '($1 < $2)'},
{proname => 'float4mi', proargtypes => 'float4 float4', mysql => '($1 - $2)'},
{proname => 'float4mul', proargtypes => 'float4 float4', mysql => '($1 * $2)'},
{proname => 'float4ne', proargtypes => 'float4 float4', mysql => '($1 <> $2)'},
{proname => 'float4pl', proargtypes => 'float4 float4', mysql => '($1 + $2)'},
{proname => 'float4', proargtypes => 'float8', mysql => 'cast($1 as real)'},
{proname => 'float4', proargtypes => 'int2', mysql => 'cast($1 as real)'},
{proname => 'float4', proargtypes => 'int4', mysql => 'cast($1 as real)'},
{proname => 'float4', proargtypes => 'int8', mysql => 'cast($1 as real)'},
{proname => 'float4', proargtypes => 'numeric', mysql => 'cast($1 as real)'},
{proname => 'float4um', proargtypes => 'float4', mysql => '(-$1)'},
{proname => 'float4up', proargtypes => 'float4', mysql => '(+$1)'},
{proname => 'float84div', proargtypes => 'float8 float4', mysql => '($1 / $2)'},
{proname => 'float84eq', proargtypes => 'float8 float4', mysql => '($1 = $2)'},
{proname => 'float84ge', proargtypes => 'float8 float4', mysql => '($1 >= $2)'},
{proname => 'float84gt', proargtypes => 'float8 float4', mysql => '($1 > $2)'},
{proname => 'float84le', proargtypes => 'float8 float4', mysql => '($1 <= $2)'},
{proname => 'float84lt', proargtypes => 'float8 float4', mysql => '($1 < $2)'},
{proname => 'float84mi', proargtypes => 'float8 float4', mysql => '($1 - $2)'},
{proname => 'float84mul', proargtypes => 'float8 float4', mysql => '($1 * $2)'},
{proname => 'float84ne', proargtypes => 'float8 float4', mysql => '($1 <> $2)'},
{proname => 'float84pl', proargtypes => 'float8 float4', mysql => '($1 + $2)'},
{proname => 'float8abs', proargtypes => 'float8', mysql => 'abs($1)'},
{proname => 'float8div', proargtypes => 'float8 float8', mysql => '($1 / $2)'},
{proname => 'float8eq', proargtypes => 'float8 float8', mysql => '($1 = $2)'},
{proname => 'float8ge', proargtypes => 'float8 float8', mysql => '($1 >= $2)'},
{proname => 'float8gt', proargtypes => 'float8 float8', mysql => '($1 > $2)'},
{proname => 'float8le', proargtypes => 'float8 float8', mysql => '($1 <= $2)'},
{proname => 'float8lt', proargtypes => 'float8 float8', mysql => '($1 < $2)'},
{proname => 'float8mi', proargtypes => 'float8 float8', mysql => '($1 - $2)'},
{proname => 'float8mul', proargtypes => 'float8 float8', mysql => '($1 * $2)'},
{proname => 'float8ne', proargtypes => 'float8 float8', mysql => '($1 <> $2)'},
{proname => 'float8pl', proargtypes => 'float8 float8', mysql => '($1 + $2)'},
{proname => 'float8', proargtypes => 'float4', mysql => 'cast($1 as real)'},
{proname => 'float8', proargtypes => 'int2', mysql => 'cast($1 as real)'},
{proname => 'float8', proargtypes => 'int4', mysql => 'cast($1 as real)'},
{proname => 'float8', proargtypes => 'int8', mysql => 'cast($1 as real)'},
{proname => 'float8', proargtypes => 'numeric', mysql => 'cast($1 as real)'},
{proname => 'float8um', proargtypes => 'float8', mysql => '(-$1)'},
{proname => 'float8up', proargtypes => 'float8', mysql => '(+$1)'},
{proname => 'floor', proargtypes => 'float8', mysql => 'floor($1)'},
{proname => 'floor', proargtypes => 'numeric', mysql => 'floor($1)'},
{proname => 'flt4_mul_cash', proargtypes => 'float4 money', mysql => '($1 * $2)'},
{proname => 'flt8_mul_cash', proargtypes => 'float8 money', mysql => '($1 * $2)'},
{proname => 'int24div', proargtypes => 'int2 int4', mysql => '($1 div $2)'},
{proname => 'int24eq', proargtypes => 'int2 int4', mysql => '($1 = $2)'},
{proname => 'int24ge', proargtypes => 'int2 int4', mysql => '($1 >= $2)'},
{proname => 'int24gt', proargtypes => 'int2 int4', mysql => '($1 > $2)'},
{proname => 'int24le', proargtypes => 'int2 int4', mysql => '($1 <= $2)'},
{proname => 'int24lt', proargtypes => 'int2 int4', mysql => '($1 < $2)'},
{proname => 'int24mi', proargtypes => 'int2 int4', mysql => '($1 - $2)'},
{proname => 'int24mul', proargtypes => 'int2 int4', mysql => '($1 * $2)'},
{proname => 'int24ne', proargtypes => 'int2 int4', mysql => '($1 <> $2)'},
{proname => 'int24pl', proargtypes => 'int2 int4', mysql => '($1 + $2)'},
{proname => 'int28div', proargtypes => 'int2 int8', mysql => '($1 div $2)'},
{proname => 'int28eq', proargtypes => 'int2 int8', mysql => '($1 = $2)'},
{proname => 'int28ge', proargtypes => 'int2 int8', mysql => '($1 >= $2)'},
{proname => 'int28gt', proargtypes => 'int2 int8', mysql => '($1 > $2)'},
{proname => 'int28le', proargtypes => 'int2 int8', mysql => '($1 <= $2)'},
{proname => 'int28lt', proargtypes => 'int2 int8', mysql => '($1 < $2)'},
{proname => 'int28mi', proargtypes => 'int2 int8', mysql => '($1 - $2)'},
{proname => 'int28mul', proargtypes => 'int2 int8', mysql => '($1 * $2)'},
{proname => 'int28ne', proargtypes => 'int2 int8', mysql => '($1 <> $2)'},
{proname => 'int28pl', proargtypes => 'int2 int8', mysql => '($1 + $2)'},
{proname => 'int2abs', proargtypes => 'int2', mysql => 'abs($1)'},
{proname => 'int2and', proargtypes => 'int2 int2', mysql => 'cast(($1 & $2) as signed)'},
{proname => 'int2div', proargtypes => 'int2 int2', mysql => '($1 div $2)'},
{proname => 'int2eq', proargtypes => 'int2 int2', mysql => '($1 = $2)'},
{proname => 'int2ge', proargtypes => 'int2 int2', mysql => '($1 >= $2)'},
{proname => 'int2gt', proargtypes => 'int2 int2', mysql => '($1 > $2)'},
{proname => 'int2le', proargtypes => 'int2 int2', mysql => '($1 <= $2)'},
{proname => 'int2lt', proargtypes => 'int2 int2', mysql => '($1 < $2)'},
{proname => 'int2mi', proargtypes => 'int2 int2', mysql => '($1 - $2)'},
{proname => 'int2mod', proargtypes => 'int2 int2', mysql => '($1 % $2)'},
{proname => 'int2_mul_cash', proargtypes => 'int2 money', mysql => '($1 * $2)'},
{proname => 'int2mul', proargtypes => 'int2 int2', mysql => '($1 * $2)'},
{proname => 'int2ne', proargtypes => 'int2 int2', mysql => '($1 <> $2)'},
{proname => 'int2not', proargtypes => 'int2', mysql => 'cast(~$1 as signed)'},
{proname => 'int2or', proargtypes => 'int2 int2', mysql => 'cast(($1 | $2) as signed)'},
{proname => 'int2pl', proargtypes => 'int2 int2', mysql => '($1 + $2)'},
{proname => 'int2', proargtypes => 'float4', mysql => 'cast($1 as signed)'},
{proname => 'int2', proargtypes => 'float8', mysql => 'cast($1 as signed)'},
{proname => 'int2', proargtypes => 'int4', mysql => 'cast($1 as signed)'},
{proname => 'int2', proargtypes => 'int8', mysql => 'cast($1 as signed)'},
{proname => 'int2', proargtypes => 'numeric', mysql => 'cast($1 as signed)'},
{proname => 'int2shl', proargtypes => 'int2 int4', mysql => '($1 << $2)'},
{proname => 'int2shr', proargtypes => 'int2 int4', mysql => '($1 >> $2)'},
{proname => 'int2um', proargtypes => 'int2', mysql => '(-$1)'},
{proname => 'int2up', proargtypes => 'int2', mysql => '(+$1)'},
{proname => 'int2xor', proargtypes => 'int2 int2', mysql => 'cast(($1 ^ $2) as signed)'},
{proname => 'int42div', proargtypes => 'int4 int2', mysql => '($1 div $2)'},
{proname => 'int42eq', proargtypes => 'int4 int2', mysql => '($1 = $2)'},
{proname => 'int42ge', proargtypes => 'int4 int2', mysql => '($1 >= $2)'},
{proname => 'int42gt', proargtypes => 'int4 int2', mysql => '($1 > $2)'},
{proname => 'int42le', proargtypes => 'int4 int2', mysql => '($1 <= $2)'},
{proname => 'int42lt', proargtypes => 'int4 int2', mysql => '($1 < $2)'},
{proname => 'int42mi', proargtypes => 'int4 int2', mysql => '($1 - $2)'},
{proname => 'int42mul', proargtypes => 'int4 int2', mysql => '($1 * $2)'},
{proname => 'int42ne', proargtypes => 'int4 int2', mysql => '($1 <> $2)'},
{proname => 'int42pl', proargtypes => 'int4 int2', mysql => '($1 + $2)'},
{proname => 'int48div', proargtypes => 'int4 int8', mysql => '($1 div $2)'},
{proname => 'int48eq', proargtypes => 'int4 int8', mysql => '($1 = $2)'},
{proname => 'int48ge', proargtypes => 'int4 int8', mysql => '($1 >= $2)'},
{proname => 'int48gt', proargtypes => 'int4 int8', mysql => '($1 > $2)'},
{proname => 'int48le', proargtypes => 'int4 int8', mysql => '($1 <= $2)'},
{proname => 'int48lt', proargtypes => 'int4 int8', mysql => '($1 < $2)'},
{proname => 'int48mi', proargtypes => 'int4 int8', mysql => '($1 - $2)'},
{proname => 'int48mul', proargtypes => 'int4 int8', mysql => '($1 * $2)'},
{proname => 'int48ne', proargtypes => 'int4 int8', mysql => '($1 <> $2)'},
{proname => 'int48pl', proargtypes => 'int4 int8', mysql => '($1 + $2)'},
{proname => 'int4abs', proargtypes => 'int4', mysql => 'abs($1)'},
{proname => 'int4and', proargtypes => 'int4 int4', mysql => 'cast(($1 & $2) as signed)'},
{proname => 'int4div', proargtypes => 'int4 int4', mysql => '($1 div $2)'},
{proname => 'int4eq', proargtypes => 'int4 int4', mysql => '($1 = $2)'},
{proname => 'int4ge', proargtypes => 'int4 int4', mysql => '($1 >= $2)'},
{proname => 'int4gt', proargtypes => 'int4 int4', mysql => '($1 > $2)'},
{proname => 'int4le', proargtypes => 'int4 int4', mysql => '($1 <= $2)'},
{proname => 'int4lt', proargtypes => 'int4 int4', mysql => '($1 < $2)'},
{proname => 'int4mi', proargtypes => 'int4 int4', mysql => '($1 - $2)'},
{proname => 'int4mod', proargtypes => 'int4 int4', mysql => '($1 % $2)'},
{proname => 'int4_mul_cash', proargtypes => 'int4 money', mysql => '($1 * $2)'},
{proname => 'int4mul', proargtypes => 'int4 int4', mysql => '($1 * $2)'},
{proname => 'int4ne', proargtypes => 'int4 int4', mysql => '($1 <> $2)'},
{proname => 'int4not', proargtypes => 'int4', mysql => 'cast(~$1 as signed)'},
{proname => 'int4or', proargtypes => 'int4 int4', mysql => 'cast(($1 | $2) as signed)'},
{proname => 'int4pl', proargtypes => 'int4 int4', mysql => '($1 + $2)'},
{proname => 'int4', proargtypes => 'bit', mysql => 'cast($1 as signed)'},
{proname => 'int4', proargtypes => 'bool', mysql => 'cast($1 as signed)'},
{proname => 'int4', proargtypes => 'char', mysql => 'cast($1 as signed)'},
{proname => 'int4', proargtypes => 'float4', mysql => 'cast($1 as signed)'},
{proname => 'int4', proargtypes => 'float8', mysql => 'cast($1 as signed)'},
{proname => 'int4', proargtypes => 'int2', mysql => 'cast($1 as signed)'},
{proname => 'int4', proargtypes => 'int8', mysql => 'cast($1 as signed)'},
{proname => 'int4', proargtypes => 'numeric', mysql => 'cast($1 as signed)'},
{proname => 'int4shl', proargtypes => 'int4 int4', mysql => '($1 << $2)'},
{proname => 'int4shr', proargtypes => 'int4 int4', mysql => '($1 >> $2)'},
{proname => 'int4um', proargtypes => 'int4', mysql => '(-$1)'},
{proname => 'int4up', proargtypes => 'int4', mysql => '(+$1)'},
{proname => 'int4xor', proargtypes => 'int4 int4', mysql => 'cast(($1 ^ $2) as signed)'},
{proname => 'int82div', proargtypes => 'int8 int2', mysql => '($1 div $2)'},
{proname => 'int82eq', proargtypes => 'int8 int2', mysql => '($1 = $2)'},
{proname => 'int82ge', proargtypes => 'int8 int2', mysql => '($1 >= $2)'},
{proname => 'int82gt', proargtypes => 'int8 int2', mysql => '($1 > $2)'},
{proname => 'int82le', proargtypes => 'int8 int2', mysql => '($1 <= $2)'},
{proname => 'int82lt', proargtypes => 'int8 int2', mysql => '($1 < $2)'},
{proname => 'int82mi', proargtypes => 'int8 int2', mysql => '($1 - $2)'},
{proname => 'int82mul', proargtypes => 'int8 int2', mysql => '($1 * $2)'},
{proname => 'int82ne', proargtypes => 'int8 int2', mysql => '($1 <> $2)'},
{proname => 'int82pl', proargtypes => 'int8 int2', mysql => '($1 + $2)'},
{proname => 'int84div', proargtypes => 'int8 int4', mysql => '($1 div $2)'},
{proname => 'int84eq', proargtypes => 'int8 int4', mysql => '($1 = $2)'},
{proname => 'int84ge', proargtypes => 'int8 int4', mysql => '($1 >= $2)'},
{proname => 'int84gt', proargtypes => 'int8 int4', mysql => '($1 > $2)'},
{proname => 'int84le', proargtypes => 'int8 int4', mysql => '($1 <= $2)'},
{proname => 'int84lt', proargtypes => 'int8 int4', mysql => '($1 < $2)'},
{proname => 'int84mi', proargtypes => 'int8 int4', mysql => '($1 - $2)'},
{proname => 'int84mul', proargtypes => 'int8 int4', mysql => '($1 * $2)'},
{proname => 'int84ne', proargtypes => 'int8 int4', mysql => '($1 <> $2)'},
{proname => 'int84pl', proargtypes => 'int8 int4', mysql => '($1 + $2)'},
{proname => 'int8abs', proargtypes => 'int8', mysql => 'abs($1)'},
{proname => 'int8and', proargtypes => 'int8 int8', mysql => 'cast(($1 & $2) as signed)'},
{proname => 'int8div', proargtypes => 'int8 int8', mysql => '($1 div $2)'},
{proname => 'int8eq', proargtypes => 'int8 int8', mysql => '($1 = $2)'},
{proname => 'int8ge', proargtypes => 'int8 int8', mysql => '($1 >= $2)'},
{proname => 'int8gt', proargtypes => 'int8 int8', mysql => '($1 > $2)'},
{proname => 'int8le', proargtypes => 'int8 int8', mysql => '($1 <= $2)'},
{proname => 'int8lt', proargtypes => 'int8 int8', mysql => '($1 < $2)'},
{proname => 'int8mi', proargtypes => 'int8 int8', mysql => '($1 - $2)'},
{proname => 'int8mod', proargtypes => 'int8 int8', mysql => 'mod($1, $2)'},
{proname => 'int8_mul_cash', proargtypes => 'int8 money', mysql => '($1 * $2)'},
{proname => 'int8mul', proargtypes => 'int8 int8', mysql => '($1 * $2)'},
{proname => 'int8ne', proargtypes => 'int8 int8', mysql => '($1 <> $2)'},
{proname => 'int8not', proargtypes => 'int8', mysql => 'cast(~$1 as signed)'},
{proname => 'int8or', proargtypes => 'int8 int8', mysql => 'cast(($1 | $2) as signed)'},
{proname => 'int8pl', proargtypes => 'int8 int8', mysql => '($1 + $2)'},
{proname => 'int8', proargtypes => 'bit', mysql => 'cast($1 as signed)'},
{proname => 'int8', proargtypes => 'float4', mysql => 'cast($1 as signed)'},
{proname => 'int8', proargtypes => 'float8', mysql => 'cast($1 as signed)'},
{proname => 'int8', proargtypes => 'int2', mysql => 'cast($1 as signed)'},
{proname => 'int8', proargtypes => 'int4', mysql => 'cast($1 as signed)'},
{proname => 'int8', proargtypes => 'numeric', mysql => 'cast($1 as signed)'},
{proname => 'int8', proargtypes => 'oid', mysql => 'cast($1 as signed)'},
{proname => 'int8shl', proargtypes => 'int8 int4', mysql => '($1 << $2)'},
{proname => 'int8shr', proargtypes => 'int8 int4', mysql => '($1 >> $2)'},
{proname => 'int8um', proargtypes => 'int8', mysql => '(-$1)'},
{proname => 'int8up', proargtypes => 'int8', mysql => '(+$1)'},
{proname => 'int8xor', proargtypes => 'int8 int8', mysql => 'cast(($1 ^ $2) as signed)'},
{proname => 'jsonb_concat', proargtypes => 'jsonb jsonb', mysql => 'json_merge_preserve($1, $2)'},
{proname => 'jsonb_eq', proargtypes => 'jsonb jsonb', mysql => '($1 = $2)'},
{proname => 'left', proargtypes => 'text int4', mysql => 'left($1, $2)'},
{proname => 'length', proargtypes => 'bpchar', mysql => 'char_length($1)'},
{proname => 'length', proargtypes => 'bytea name', mysql => 'char_length(convert(convert($1 using binary) using $2)'},
{proname => 'length', proargtypes => 'bytea', mysql => 'length($1)'},
{proname => 'length', proargtypes => 'text', mysql => 'char_length($1)'},
{proname => 'like', proargtypes => 'bytea bytea', mysql => '$1 like $2'},
{proname => 'like', proargtypes => 'name text', mysql => '$1 like $2'},
{proname => 'like', proargtypes => 'text text', mysql => '$1 like $2'},
{proname => 'ln', proargtypes => 'float8', mysql => 'ln($1)'},
{proname => 'ln', proargtypes => 'numeric', mysql => 'ln($1)'},
{proname => 'log', proargtypes => 'float8', mysql => 'log10($1)'},
{proname => 'log', proargtypes => 'numeric numeric', mysql => 'log($1, $2)'},
{proname => 'lower', proargtypes => 'text', mysql => 'lower($1)'},
{proname => 'lpad', proargtypes => 'text int4 text', mysql => 'lpad($1, $2, $3)'},
{proname => 'ltrim', proargtypes => 'text', mysql => 'ltrim($1)'},
{proname => 'ltrim', proargtypes => 'text text', mysql => 'trim(LEADING $2 FROM $1)'},
{proname => 'macaddr8_eq', proargtypes => 'macaddr8 macaddr8', mysql => '($1 = $2)'},
{proname => 'macaddr8_ge', proargtypes => 'macaddr8 macaddr8', mysql => '($1 >= $2)'},
{proname => 'macaddr8_gt', proargtypes => 'macaddr8 macaddr8', mysql => '($1 > $2)'},
{proname => 'macaddr8_le', proargtypes => 'macaddr8 macaddr8', mysql => '($1 <= $2)'},
{proname => 'macaddr8_lt', proargtypes => 'macaddr8 macaddr8', mysql => '($1 < $2)'},
{proname => 'macaddr_ge', proargtypes => 'macaddr macaddr', mysql => '($1 >= $2)'},
{proname => 'macaddr_gt', proargtypes => 'macaddr macaddr', mysql => '($1 > $2)'},
{proname => 'macaddr_le', proargtypes => 'macaddr macaddr', mysql => '($1 <= $2)'},
{proname => 'macaddr_lt', proargtypes => 'macaddr macaddr', mysql => '($1 < $2)'},
{proname => 'max', proargtypes => 'abstime', mysql => 'max($1)'},
{proname => 'max', proargtypes => 'anyenum', mysql => 'max($1)'},
{proname => 'max', proargtypes => 'bpchar', mysql => 'max($1)'},
{proname => 'max', proargtypes => 'date', mysql => 'max($1)'},
{proname => 'max', proargtypes => 'float4', mysql => 'max($1)'},
{proname => 'max', proargtypes => 'float8', mysql => 'max($1)'},
{proname => 'max', proargtypes => 'int2', mysql => 'max($1)'},
{proname => 'max', proargtypes => 'int4', mysql => 'max($1)'},
{proname => 'max', proargtypes => 'int8', mysql => 'max($1)'},
{proname => 'max', proargtypes => 'money', mysql => 'max($1)'},
{proname => 'max', proargtypes => 'numeric', mysql => 'max($1)'},
{proname => 'max', proargtypes => 'oid', mysql => 'max($1)'},
{proname => 'max', proargtypes => 'text', mysql => 'max($1)'},
{proname => 'max', proargtypes => 'time', mysql => 'max($1)'},
{proname => 'max', proargtypes => 'timestamp', mysql => 'max($1)'},
{proname => 'max', proargtypes => 'timestamptz', mysql => 'max($1)'},
{proname => 'max', proargtypes => 'timetz', mysql => 'max($1)'},
{proname => 'md5', proargtypes => 'bytea', mysql => 'md5($1)'},
{proname => 'md5', proargtypes => 'text', mysql => 'md5($1)'},
{proname => 'min', proargtypes => 'anyenum', mysql => 'min($1)'},
{proname => 'min', proargtypes => 'bpchar', mysql => 'min($1)'},
{proname => 'min', proargtypes => 'date', mysql => 'min($1)'},
{proname => 'min', proargtypes => 'float4', mysql => 'min($1)'},
{proname => 'min', proargtypes => 'float8', mysql => 'min($1)'},
{proname => 'min', proargtypes => 'int2', mysql => 'min($1)'},
{proname => 'min', proargtypes => 'int4', mysql => 'min($1)'},
{proname => 'min', proargtypes => 'int8', mysql => 'min($1)'},
{proname => 'min', proargtypes => 'money', mysql => 'min($1)'},
{proname => 'min', proargtypes => 'numeric', mysql => 'min($1)'},
{proname => 'min', proargtypes => 'oid', mysql => 'min($1)'},
{proname => 'min', proargtypes => 'text', mysql => 'min($1)'},
{proname => 'min', proargtypes => 'time', mysql => 'min($1)'},
{proname => 'min', proargtypes => 'timestamp', mysql => 'min($1)'},
{proname => 'min', proargtypes => 'timestamptz', mysql => 'min($1)'},
{proname => 'min', proargtypes => 'timetz', mysql => 'min($1)'},
{proname => 'mod', proargtypes => 'int2 int2', mysql => 'mod($1, $2)'},
{proname => 'mod', proargtypes => 'int4 int4', mysql => 'mod($1, $2)'},
{proname => 'mod', proargtypes => 'int8 int8', mysql => 'mod($1, $2)'},
{proname => 'mod', proargtypes => 'numeric numeric', mysql => 'mod($1, $2)'},
{proname => 'money', proargtypes => 'int4', mysql => 'cast($1 as signed)'},
{proname => 'money', proargtypes => 'int8', mysql => 'cast($1 as signed)'},
{proname => 'money', proargtypes => 'numeric', mysql => '$1'},
{proname => 'nameeq', proargtypes => 'name name', mysql => '($1 = $2)'},
{proname => 'namege', proargtypes => 'name name', mysql => '($1 >= $2)'},
{proname => 'namegt', proargtypes => 'name name', mysql => '($1 > $2)'},
{proname => 'nameicregexeq', proargtypes => 'name text', mysql => 'regexp_like($1, $2, "i")'},
{proname => 'nameicregexne', proargtypes => 'name text', mysql => '!regexp_like($1, $2, "i")'},
{proname => 'namele', proargtypes => 'name name', mysql => '($1 <= $2)'},
{proname => 'namelike', proargtypes => 'name text', mysql => '($1 like $2)'},
{proname => 'namelt', proargtypes => 'name name', mysql => '($1 < $2)'},
{proname => 'namene', proargtypes => 'name name', mysql => '($1 <> $2)'},
{proname => 'namenlike', proargtypes => 'name text', mysql => '($1 not like $2)'},
{proname => 'nameregexeq', proargtypes => 'name text', mysql => 'regexp_like($1, $2, "c")'},
{proname => 'nameregexne', proargtypes => 'name text', mysql => '!regexp_like($1, $2, "c")'},
{proname => 'notlike', proargtypes => 'name text', mysql => '$1 not like $2'},
{proname => 'notlike', proargtypes => 'text text', mysql => '$1 not like $2'},
{proname => 'numeric_abs', proargtypes => 'numeric', mysql => 'abs($1)'},
{proname => 'numeric_add', proargtypes => 'numeric numeric', mysql => '($1 + $2)'},
{proname => 'numeric_div', proargtypes => 'numeric numeric', mysql => '($1 / $2)'},
{proname => 'numeric_div_trunc', proargtypes => 'numeric numeric', mysql => 'div($1, $2)'},
{proname => 'numeric_eq', proargtypes => 'numeric numeric', mysql => '($1 = $2)'},
{proname => 'numeric_exp', proargtypes => 'numeric', mysql => 'exp($1)'},
{proname => 'numeric_ge', proargtypes => 'numeric numeric', mysql => '($1 >= $2)'},
{proname => 'numeric_gt', proargtypes => 'numeric numeric', mysql => '($1 > $2)'},
{proname => 'numeric_inc', proargtypes => 'numeric', mysql => '($1 + 1)'},
{proname => 'numeric_larger', proargtypes => 'numeric numeric', mysql => 'greatest($1, $2)'},
{proname => 'numeric_le', proargtypes => 'numeric numeric', mysql => '($1 <= $2)'},
{proname => 'numeric_ln', proargtypes => 'numeric', mysql => 'ln($1)'},
{proname => 'numeric_log', proargtypes => 'numeric numeric', mysql => 'log($1, $2)'},
{proname => 'numeric_lt', proargtypes => 'numeric numeric', mysql => '($1 < $2)'},
{proname => 'numeric_mod', proargtypes => 'numeric numeric', mysql => 'mod($1, $2)'},
{proname => 'numeric_mul', proargtypes => 'numeric numeric', mysql => '($1 * $2)'},
{proname => 'numeric_ne', proargtypes => 'numeric numeric', mysql => '($1 != $2)'},
{proname => 'numeric_power', proargtypes => 'numeric numeric', mysql => 'pow($1, $2)'},
{proname => 'numeric', proargtypes => 'float4', mysql => 'cast($1 as decimal(65,20))'},
{proname => 'numeric', proargtypes => 'float8', mysql => 'cast($1 as decimal(65,20))'},
{proname => 'numeric', proargtypes => 'int2', mysql => 'cast($1 as decimal)'},
{proname => 'numeric', proargtypes => 'int4', mysql => 'cast($1 as decimal)'},
{proname => 'numeric', proargtypes => 'int8', mysql => 'cast($1 as decimal)'},
{proname => 'numeric', proargtypes => 'money', mysql => 'cast($1 as decimal(65,8))'},
{proname => 'numeric', proargtypes => 'numeric int4', mysql => 'cast($1 as decimal(65, 20))'},
{proname => 'numeric_smaller', proargtypes => 'numeric numeric', mysql => 'least($1, $2)'},
{proname => 'numeric_sub', proargtypes => 'numeric numeric', mysql => '($1 - $2)'},
{proname => 'numeric_uminus', proargtypes => 'numeric', mysql => '( - $1)'},
{proname => 'numeric_uplus', proargtypes => 'numeric', mysql => '$1'},
{proname => 'octet_length', proargtypes => 'bit', mysql => 'octet_length($1)'},
{proname => 'octet_length', proargtypes => 'bpchar', mysql => 'octet_length($1)'},
{proname => 'octet_length', proargtypes => 'bytea', mysql => 'octet_length($1)'},
{proname => 'octet_length', proargtypes => 'text', mysql => 'octet_length($1)'},
{proname => 'oideq', proargtypes => 'oid oid', mysql => '($1 = $2)'},
{proname => 'oidge', proargtypes => 'oid oid', mysql => '($1 >= $2)'},
{proname => 'oidgt', proargtypes => 'oid oid', mysql => '($1 > $2)'},
{proname => 'oidle', proargtypes => 'oid oid', mysql => '($1 <= $2)'},
{proname => 'oidlt', proargtypes => 'oid oid', mysql => '($1 < $2)'},
{proname => 'oidne', proargtypes => 'oid oid', mysql => '($1 <> $2)'},
{proname => 'oid', proargtypes => 'int8', mysql => 'cast($1 as unsigned)'},
{proname => 'path_n_eq', proargtypes => 'path path', mysql => '($1 = $2)'},
{proname => 'pi', proargtypes => '', mysql => 'pi'},
{proname => 'position', proargtypes => 'bytea bytea', mysql => 'locate($1, $2)'},
{proname => 'position', proargtypes => 'text text', mysql => 'locate($1, $2)'},
{proname => 'power', proargtypes => 'float8 float8', mysql => 'pow($1, $2)'},
{proname => 'power', proargtypes => 'numeric numeric', mysql => 'pow($1, $2)'},
{proname => 'pow', proargtypes => 'float8 float8', mysql => 'pow($1, $2)'},
{proname => 'pow', proargtypes => 'numeric numeric', mysql => 'pow($1, $2)'},
{proname => 'radians', proargtypes => 'float8', mysql => 'radians($1)'},
{proname => 'random', proargtypes => '', mysql => 'rand()'},
{proname => 'repeat', proargtypes => 'text int4', mysql => 'repeat($1, $2)'},
{proname => 'replace', proargtypes => 'text text text', mysql => 'replace($1, $2, $3)'},
{proname => 'reverse', proargtypes => 'text', mysql => 'reverse($1)'},
{proname => 'right', proargtypes => 'text int4', mysql => 'right($1, $2)'},
{proname => 'round', proargtypes => 'float8', mysql => 'round($1)'},
{proname => 'round', proargtypes => 'numeric int4', mysql => 'round($1, $2)'},
{proname => 'rpad', proargtypes => 'text int4 text', mysql => 'rpad($1, $2, $3)'},
{proname => 'rtrim', proargtypes => 'text', mysql => 'rtrim($1)'},
{proname => 'rtrim', proargtypes => 'text text', mysql => 'trim(TRAILING $2 FROM $1)'},
{proname => 'sha224', proargtypes => 'bytea', mysql => 'sha2($1, 224)'},
{proname => 'sha256', proargtypes => 'bytea', mysql => 'sha2($1, 256)'},
{proname => 'sha384', proargtypes => 'bytea', mysql => 'sha2($1, 384)'},
{proname => 'sha512', proargtypes => 'bytea', mysql => 'sha2($1, 512)'},
{proname => 'sign', proargtypes => 'float8', mysql => 'sign($1)'},
{proname => 'sign', proargtypes => 'numeric', mysql => 'sign($1)'},
{proname => 'sin', proargtypes => 'float8', mysql => 'sin($1)'},
{proname => 'sqrt', proargtypes => 'float8', mysql => 'sqrt($1)'},
{proname => 'sqrt', proargtypes => 'numeric', mysql => 'sqrt($1)'},
{proname => 'stddev_pop', proargtypes => 'float4', mysql => 'stddev_pop($1)'},
{proname => 'stddev_pop', proargtypes => 'float8', mysql => 'stddev_pop($1)'},
{proname => 'stddev_pop', proargtypes => 'int2', mysql => 'stddev_pop($1)'},
{proname => 'stddev_pop', proargtypes => 'int4', mysql => 'stddev_pop($1)'},
{proname => 'stddev_pop', proargtypes => 'int8', mysql => 'stddev_pop($1)'},
{proname => 'stddev_pop', proargtypes => 'numeric', mysql => 'stddev_pop($1)'},
{proname => 'stddev', proargtypes => 'float4', mysql => 'stddev_samp($1)'},
{proname => 'stddev', proargtypes => 'float8', mysql => 'stddev_samp($1)'},
{proname => 'stddev', proargtypes => 'int2', mysql => 'stddev_samp($1)'},
{proname => 'stddev', proargtypes => 'int4', mysql => 'stddev_samp($1)'},
{proname => 'stddev', proargtypes => 'int8', mysql => 'stddev_samp($1)'},
{proname => 'stddev', proargtypes => 'numeric', mysql => 'stddev_samp($1)'},
{proname => 'stddev_samp', proargtypes => 'float4', mysql => 'stddev_samp($1)'},
{proname => 'stddev_samp', proargtypes => 'float8', mysql => 'stddev_samp($1)'},
{proname => 'stddev_samp', proargtypes => 'int2', mysql => 'stddev_samp($1)'},
{proname => 'stddev_samp', proargtypes => 'int4', mysql => 'stddev_samp($1)'},
{proname => 'stddev_samp', proargtypes => 'int8', mysql => 'stddev_samp($1)'},
{proname => 'stddev_samp', proargtypes => 'numeric', mysql => 'stddev_samp($1)'},
{proname => 'substring', proargtypes => 'bit int4 int4', enable => 'f', mysql => 'substr($1, $2, $3)'},
{proname => 'substring', proargtypes => 'bit int4', enable => 'f', mysql => 'substr($1, $2)'},
{proname => 'substring', proargtypes => 'bytea int4 int4', mysql => 'substr($1, if($2>0, $2, 1), $3 + if($2>0, 0, $2-1))'},
{proname => 'substring', proargtypes => 'bytea int4', mysql => 'substr($1, $2)'},
{proname => 'substring', proargtypes => 'text int4 int4', mysql => 'substr($1, if($2>0, $2, 1), $3 + if($2>0, 0, $2-1))'},
{proname => 'substring', proargtypes => 'text int4', mysql => 'substr($1, $2)'},
{proname => 'substr', proargtypes => 'bytea int4 int4', mysql => 'substr($1, if($2>0, $2, 1), $3 + if($2>0, 0, $2-1))'},
{proname => 'substr', proargtypes => 'bytea int4', mysql => 'substr($1, $2)'},
{proname => 'substr', proargtypes => 'text int4 int4', mysql => 'substr($1, if($2>0, $2, 1), $3 + if($2>0, 0, $2-1))'},
{proname => 'substr', proargtypes => 'text int4', mysql => 'substr($1, $2)'},
{proname => 'sum', proargtypes => 'float4', mysql => 'sum($1)'},
{proname => 'sum', proargtypes => 'float8', mysql => 'sum($1)'},
{proname => 'sum', proargtypes => 'int2', mysql => 'sum($1)'},
{proname => 'sum', proargtypes => 'int4', mysql => 'sum($1)'},
{proname => 'sum', proargtypes => 'int8', mysql => 'sum($1)'},
{proname => 'sum', proargtypes => 'money', mysql => 'sum($1)'},
{proname => 'sum', proargtypes => 'numeric', mysql => 'sum($1)'},
{proname => 'tan', proargtypes => 'float8', mysql => 'tan($1)'},
{proname => 'text', proargtypes => 'bpchar', mysql => 'rtrim($1)'},
{proname => 'text', proargtypes => 'name', mysql => 'cast($1 as char(64))'},
{proname => 'text', proargtypes => 'char', mysql => '$1'},
{proname => 'text', proargtypes => 'xml', mysql => '$1'},
{proname => 'textcat', proargtypes => 'text text', mysql => 'concat($1, $2)'},
{proname => 'texteq', proargtypes => 'text text', mysql => '($1 = $2)'},
{proname => 'text_ge', proargtypes => 'text text', mysql => '($1 >= $2)'},
{proname => 'text_gt', proargtypes => 'text text', mysql => '($1 > $2)'},
{proname => 'texticregexeq', proargtypes => 'text text', mysql => 'regexp_like($1, $2, "i")'},
{proname => 'texticregexne', proargtypes => 'text text', mysql => '!regexp_like($1, $2, "i")'},
{proname => 'text_le', proargtypes => 'text text', mysql => '($1 <= $2)'},
{proname => 'textlike', proargtypes => 'text text', mysql => '($1 like $2)'},
{proname => 'text_lt', proargtypes => 'text text', mysql => '($1 < $2)'},
{proname => 'textne', proargtypes => 'text text', mysql => '($1 <> $2)'},
{proname => 'textnlike', proargtypes => 'text text', mysql => '($1 not like $2)'},
{proname => 'textregexeq', proargtypes => 'text text', mysql => 'regexp_like($1, $2, "c")'},
{proname => 'textregexne', proargtypes => 'text text', mysql => '!regexp_like($1, $2, "c")'},
{proname => 'tidge', proargtypes => 'tid tid', mysql => '($1 >= $2)'},
{proname => 'tidgt', proargtypes => 'tid tid', mysql => '($1 > $2)'},
{proname => 'tidle', proargtypes => 'tid tid', mysql => '($1 <= $2)'},
{proname => 'tidlt', proargtypes => 'tid tid', mysql => '($1 < $2)'},
{proname => 'time_eq', proargtypes => 'time time', mysql => '($1 = $2)'},
{proname => 'time_ge', proargtypes => 'time time', mysql => '($1 >= $2)'},
{proname => 'time_gt', proargtypes => 'time time', mysql => '($1 > $2)'},
{proname => 'time_le', proargtypes => 'time time', mysql => '($1 <= $2)'},
{proname => 'time_lt', proargtypes => 'time time', mysql => '($1 < $2)'},
{proname => 'time_mi_interval', proargtypes => 'time interval', mysql => 'date_sub($1, $2)'},
{proname => 'time_ne', proargtypes => 'time time', mysql => '($1 <> $2)'},
{proname => 'time_pl_interval', proargtypes => 'time interval', mysql => 'date_add($1, $2)'},
{proname => 'time', proargtypes => 'time int4', mysql => 'cast($1 as time($2))'},
{proname => 'time', proargtypes => 'timestamp', mysql => 'time($1)'},
{proname => 'time', proargtypes => 'timestamptz', mysql => 'time($1)'},
{proname => 'time', proargtypes => 'timetz', mysql => 'time($1)'},
{proname => 'timestamp_eq_date', proargtypes => 'timestamp date', mysql => '($1 = $2)'},
{proname => 'timestamp_eq', proargtypes => 'timestamp timestamp', mysql => '($1 = $2)'},
{proname => 'timestamp_eq_timestamptz', proargtypes => 'timestamp timestamptz', mysql => '($1 = $2)'},
{proname => 'timestamp_ge_date', proargtypes => 'timestamp date', mysql => '($1 >= $2)'},
{proname => 'timestamp_ge', proargtypes => 'timestamp timestamp', mysql => '($1 >= $2)'},
{proname => 'timestamp_ge_timestamptz', proargtypes => 'timestamp timestamptz', mysql => '($1 >= $2)'},
{proname => 'timestamp_gt_date', proargtypes => 'timestamp date', mysql => '($1 > $2)'},
{proname => 'timestamp_gt', proargtypes => 'timestamp timestamp', mysql => '($1 > $2)'},
{proname => 'timestamp_gt_timestamptz', proargtypes => 'timestamp timestamptz', mysql => '($1 > $2)'},
{proname => 'timestamp_le_date', proargtypes => 'timestamp date', mysql => '($1 <= $2)'},
{proname => 'timestamp_le', proargtypes => 'timestamp timestamp', mysql => '($1 <= $2)'},
{proname => 'timestamp_le_timestamptz', proargtypes => 'timestamp timestamptz', mysql => '($1 <= $2)'},
{proname => 'timestamp_lt_date', proargtypes => 'timestamp date', mysql => '($1 < $2)'},
{proname => 'timestamp_lt', proargtypes => 'timestamp timestamp', mysql => '($1 < $2)'},
{proname => 'timestamp_lt_timestamptz', proargtypes => 'timestamp timestamptz', mysql => '($1 < $2)'},
{proname => 'timestamp_mi_interval', proargtypes => 'timestamp interval', mysql => 'date_sub($1, $2)'},
{proname => 'timestamp_ne_date', proargtypes => 'timestamp date', mysql => '($1 <> $2)'},
{proname => 'timestamp_ne', proargtypes => 'timestamp timestamp', mysql => '($1 <> $2)'},
{proname => 'timestamp_ne_timestamptz', proargtypes => 'timestamp timestamptz', mysql => '($1 <> $2)'},
{proname => 'timestamp_pl_interval', proargtypes => 'timestamp interval', mysql => 'date_add($1, $2)'},
{proname => 'timestamp', proargtypes => 'date', mysql => 'timestamp($1)'},
{proname => 'timestamp', proargtypes => 'date time', mysql => 'timestamp($1, $2)'},
{proname => 'timestamp', proargtypes => 'timestamp int4', mysql => 'cast($1 as datetime($2))'},
{proname => 'timestamp', proargtypes => 'timestamptz', mysql => 'timestamp($1)'},
{proname => 'timestamptz_eq_date', proargtypes => 'timestamptz date', mysql => '($1 = $2)'},
{proname => 'timestamptz_eq', proargtypes => 'timestamptz timestamptz', mysql => '($1 = $2)'},
{proname => 'timestamptz_eq_timestamp', proargtypes => 'timestamptz timestamp', mysql => '($1 = $2)'},
{proname => 'timestamptz_ge_date', proargtypes => 'timestamptz date', mysql => '($1 >= $2)'},
{proname => 'timestamptz_ge', proargtypes => 'timestamptz timestamptz', mysql => '($1 >= $2)'},
{proname => 'timestamptz_ge_timestamp', proargtypes => 'timestamptz timestamp', mysql => '($1 >= $2)'},
{proname => 'timestamptz_gt_date', proargtypes => 'timestamptz date', mysql => '($1 > $2)'},
{proname => 'timestamptz_gt', proargtypes => 'timestamptz timestamptz', mysql => '($1 > $2)'},
{proname => 'timestamptz_gt_timestamp', proargtypes => 'timestamptz timestamp', mysql => '($1 > $2)'},
{proname => 'timestamptz_le_date', proargtypes => 'timestamptz date', mysql => '($1 <= $2)'},
{proname => 'timestamptz_le', proargtypes => 'timestamptz timestamptz', mysql => '($1 <= $2)'},
{proname => 'timestamptz_le_timestamp', proargtypes => 'timestamptz timestamp', mysql => '($1 <= $2)'},
{proname => 'timestamptz_lt_date', proargtypes => 'timestamptz date', mysql => '($1 < $2)'},
{proname => 'timestamptz_lt', proargtypes => 'timestamptz timestamptz', mysql => '($1 < $2)'},
{proname => 'timestamptz_lt_timestamp', proargtypes => 'timestamptz timestamp', mysql => '($1 < $2)'},
{proname => 'timestamptz_mi_interval', proargtypes => 'timestamptz interval', mysql => 'date_sub($1, $2)'},
{proname => 'timestamptz_ne_date', proargtypes => 'timestamptz date', mysql => '($1 <> $2)'},
{proname => 'timestamptz_ne', proargtypes => 'timestamptz timestamptz', mysql => '($1 <> $2)'},
{proname => 'timestamptz_ne_timestamp', proargtypes => 'timestamptz timestamp', mysql => '($1 <> $2)'},
{proname => 'timestamptz_pl_interval', proargtypes => 'timestamptz interval', mysql => 'date_add($1, $2)'},
{proname => 'timestamptz', proargtypes => 'date', mysql => 'timestamp($1)', enable => 'f' },
{proname => 'timestamptz', proargtypes => 'timestamp', mysql => '$1', enable => 'f' },
{proname => 'timestamptz', proargtypes => 'date timetz', mysql => 'timestamp($1, $2)'},
{proname => 'timestamptz', proargtypes => 'timestamptz int4', mysql => 'cast($1 as  datetime($2))'},
{proname => 'timetz_eq', proargtypes => 'timetz timetz', mysql => '($1 = $2)'},
{proname => 'timetz_ge', proargtypes => 'timetz timetz', mysql => '($1 >= $2)'},
{proname => 'timetz_gt', proargtypes => 'timetz timetz', mysql => '($1 > $2)'},
{proname => 'timetz_le', proargtypes => 'timetz timetz', mysql => '($1 <= $2)'},
{proname => 'timetz_lt', proargtypes => 'timetz timetz', mysql => '($1 < $2)'},
{proname => 'timetz_mi_interval', proargtypes => 'timetz interval', mysql => 'date_sub($1, $2)'},
{proname => 'timetz_ne', proargtypes => 'timetz timetz', mysql => '($1 <> $2)'},
{proname => 'timetz_pl_interval', proargtypes => 'timetz interval', mysql => 'date_add($1, $2)'},
{proname => 'timetz', proargtypes => 'time', mysql => '$1'},
{proname => 'timetz', proargtypes => 'timestamptz', mysql => 'time($1)'},
{proname => 'timetz', proargtypes => 'timetz int4', mysql => 'cast($1 as time($2))'},
{proname => 'to_hex', proargtypes => 'int4', mysql => 'hex($1)'},
{proname => 'to_hex', proargtypes => 'int8', mysql => 'hex($1)'},
{proname => 'trunc', proargtypes => 'float8', mysql => 'truncate($1, 0)'},
{proname => 'trunc', proargtypes => 'numeric int4', mysql => 'truncate($1, $2)'},
{proname => 'upper', proargtypes => 'text', mysql => 'upper($1)'},
{proname => 'uuid_eq', proargtypes => 'uuid uuid', mysql => '($1 = $2)'},
{proname => 'uuid_ge', proargtypes => 'uuid uuid', mysql => '($1 >= $2)'},
{proname => 'uuid_gt', proargtypes => 'uuid uuid', mysql => '($1 > $2)'},
{proname => 'uuid_le', proargtypes => 'uuid uuid', mysql => '($1 <= $2)'},
{proname => 'uuid_lt', proargtypes => 'uuid uuid', mysql => '($1 < $2)'},
{proname => 'uuid_ne', proargtypes => 'uuid uuid', mysql => '($1 <> $2)'},
{proname => 'varbiteq', proargtypes => 'varbit varbit', mysql => '($1 = $2)'},
{proname => 'varbitne', proargtypes => 'varbit varbit', mysql => '($1 <> $2)'},
{proname => 'varchar', proargtypes => 'name', mysql => 'cast($1 as char(64))'},
{proname => 'variance', proargtypes => 'float4', mysql => 'var_samp($1)'},
{proname => 'variance', proargtypes => 'float8', mysql => 'var_samp($1)'},
{proname => 'variance', proargtypes => 'int2', mysql => 'var_samp($1)'},
{proname => 'variance', proargtypes => 'int4', mysql => 'var_samp($1)'},
{proname => 'variance', proargtypes => 'int8', mysql => 'var_samp($1)'},
{proname => 'variance', proargtypes => 'numeric', mysql => 'var_samp($1)'},
{proname => 'var_pop', proargtypes => 'float4', mysql => 'var_pop($1)'},
{proname => 'var_pop', proargtypes => 'float8', mysql => 'var_pop($1)'},
{proname => 'var_pop', proargtypes => 'int2', mysql => 'var_pop($1)'},
{proname => 'var_pop', proargtypes => 'int4', mysql => 'var_pop($1)'},
{proname => 'var_pop', proargtypes => 'int8', mysql => 'var_pop($1)'},
{proname => 'var_pop', proargtypes => 'numeric', mysql => 'var_pop($1)'},
{proname => 'var_samp', proargtypes => 'float4', mysql => 'var_samp($1)'},
{proname => 'var_samp', proargtypes => 'float8', mysql => 'var_samp($1)'},
{proname => 'var_samp', proargtypes => 'int2', mysql => 'var_samp($1)'},
{proname => 'var_samp', proargtypes => 'int4', mysql => 'var_samp($1)'},
{proname => 'var_samp', proargtypes => 'int8', mysql => 'var_samp($1)'},
{proname => 'var_samp', proargtypes => 'numeric', mysql => 'var_samp($1)'},
{proname => 'xideqint4', proargtypes => 'xid int4', mysql => '($1 = $2)'},
{proname => 'xideq', proargtypes => 'xid xid', mysql => '($1 = $2)'},
{proname => 'xidneqint4', proargtypes => 'xid int4', mysql => '($1 <> $2)'},
{proname => 'xidneq', proargtypes => 'xid xid', mysql => '($1 <> $2)'}
]
